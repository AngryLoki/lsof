head	1.12;
access;
symbols;
locks; strict;
comment	@# @;


1.12
date	2009.03.25.19.23.06;	author abe;	state Exp;
branches;
next	1.11;

1.11
date	2008.04.15.13.29.28;	author abe;	state Exp;
branches;
next	1.10;

1.10
date	2001.11.01.20.26.18;	author abe;	state Exp;
branches;
next	1.9;

1.9
date	99.11.28.06.40.18;	author abe;	state Exp;
branches;
next	1.8;

1.8
date	99.02.25.19.57.21;	author abe;	state Exp;
branches;
next	1.7;

1.7
date	99.02.08.15.24.36;	author abe;	state Exp;
branches;
next	1.6;

1.6
date	98.02.16.19.48.33;	author abe;	state Exp;
branches;
next	1.5;

1.5
date	97.05.22.15.55.22;	author abe;	state Exp;
branches;
next	1.4;

1.4
date	97.04.29.14.15.59;	author abe;	state Exp;
branches;
next	1.3;

1.3
date	97.04.29.10.01.05;	author abe;	state Exp;
branches;
next	1.2;

1.2
date	97.03.06.13.02.30;	author abe;	state Exp;
branches;
next	1.1;

1.1
date	97.02.24.07.33.02;	author abe;	state Exp;
branches;
next	;


desc
@Lsof version 4
@


1.12
log
@Revision 4.82
@
text
@
# FreeBSD Makefile remainder
#
# $Id: Makefile,v 1.11 2008/04/15 13:29:28 abe Exp abe $

PROG=	lsof

BIN=	${DESTDIR}

DOC=	${DESTDIR}

I=/usr/include
S=/usr/include/sys
L=/usr/include/local
P=

CDEF=
CDEFS=  ${CDEF} ${CFGF}
INCL=	${DINC}
CFLAGS=	${CDEFS} ${INCL} ${DEBUG}

GRP=

HDR=    lsof.h lsof_fields.h dlsof.h machine.h proto.h dproto.h dzfs.h

SRC=    dmnt.c dnode.c dnode1.c dnode2.c dproc.c dsock.c dstore.c \
	arg.c main.c misc.c node.c print.c proc.c store.c usage.c \
	util.c

OBJ=	dmnt.o dnode.o dnode1.o dnode2.o dproc.o dsock.o dstore.o \
	arg.o main.o misc.o node.o print.o proc.o store.o usage.o \
	util.o

MAN=	lsof.8

OTHER=	

SHELL=	/bin/sh

SOURCE=	Makefile ${OTHER} ${MAN} ${HDR} ${SRC}

all: ${PROG}

${PROG}: ${LIB} ${P} ${OBJ}
	${CC} -o $@@ ${CFLAGS} ${OBJ} ${CFGL}

clean: FRC
	rm -f Makefile.bak ${PROG} a.out core errs lint.out tags *.o version.h
	rm -f machine.h.old new_machine.h
	(cd lib; ${MAKE} -f Makefile.skel clean)

install: all FRC
	@@echo ''
	@@echo 'Please write your own install rule.  Lsof should be installed'
	@@echo 'setgid to the group that can can read /dev/kmem.  Normally'
	@@echo 'that is the kmem group.  Your install rule actions might look'
	@@echo 'something like this:'
	@@echo ''
	@@echo '    install -cs -m 2755 -g $${GRP} $${PROG} $${BIN}/$${PROG}'
	@@echo '    install -c -m 444 $${MAN} $${DOC}/$${MAN}'
	@@echo ''
	@@echo 'You will have to complete the skeletons for the BIN, DOC, and'
	@@echo 'GRP strings given at the beginning of this Makefile, e.g.,'
	@@echo ''
	@@echo '    BIN= $${DESTDIR}/usr/local/etc'
	@@echo '    DOC= $${DESTDIR}/usr/local/man/man8'
	@@echo '    GRP= kmem'
	@@echo ''

${LIB}: FRC
	(cd lib; ${MAKE} DEBUG="${DEBUG}" CFGF="${CFGF}")

version.h:	FRC
	@@echo Constructing version.h
	@@rm -f version.h
	@@echo '#define	LSOF_BLDCMT	"${LSOF_BLDCMT}"' > version.h;
	@@echo '#define	LSOF_CC		"${CC}"' >> version.h
	@@echo '#define	LSOF_CCV	"${CCV}"' >> version.h
	@@echo '#define	LSOF_CCDATE	"'`date`'"' >> version.h
	@@echo '#define	LSOF_CCFLAGS	"'`echo ${CFLAGS} | sed 's/\\\\(/\\(/g' | sed 's/\\\\)/\\)/g' | sed 's/"/\\\\"/g'`'"' >> version.h
	@@if [ "X${LSOF_HOST}" = "X" ]; then \
	  echo '#define	LSOF_HOST	"'`uname -n`'"' >> version.h; \
	else \
	  if [ "${LSOF_HOST}" = "none" ]; then \
	    echo '#define	LSOF_HOST	""' >> version.h; \
	  else \
	    echo '#define	LSOF_HOST	"${LSOF_HOST}"' >> version.h; \
	  fi \
	fi
	@@echo '#define	LSOF_LDFLAGS	"${CFGL}"' >> version.h
	@@if [ "X${LSOF_LOGNAME}" = "X" ]; then \
	  echo '#define	LSOF_LOGNAME	"${LOGNAME}"' >> version.h; \
	else \
	  if [ "${LSOF_LOGNAME}" = "none" ]; then \
	    echo '#define	LSOF_LOGNAME	""' >> version.h; \
	  else \
	    echo '#define	LSOF_LOGNAME	"${LSOF_LOGNAME}"' >> version.h; \
	  fi; \
	fi
	@@if [ "X${LSOF_SYSINFO}" = "X" ]; then \
	    echo '#define	LSOF_SYSINFO	"'`uname -a`'"' >> version.h; \
	else \
	  if [ "${LSOF_SYSINFO}" = "none" ]; then \
	    echo '#define	LSOF_SYSINFO	""' >> version.h; \
	  else \
	    echo '#define	LSOF_SYSINFO	"${LSOF_SYSINFO}"' >> version.h; \
	  fi \
	fi
	@@if [ "X${LSOF_USER}" = "X" ]; then \
	  echo '#define	LSOF_USER	"${USER}"' >> version.h; \
	else \
	  if [ "${LSOF_USER}" = "none" ]; then \
	    echo '#define	LSOF_USER	""' >> version.h; \
	  else \
	    echo '#define	LSOF_USER	"${LSOF_USER}"' >> version.h; \
	  fi \
	fi
	@@sed '/VN/s/.ds VN \(.*\)/#define	LSOF_VERSION	"\1"/' < version >> version.h

FRC:

# DO NOT DELETE THIS LINE - make depend DEPENDS ON IT

dmnt.o:		${HDR} dmnt.c

dnode.o:	${HDR} dnode.c

dnode1.o:	${HDR} dnode1.c

dnode2.o:	dzfs.h dnode2.c
		@@if [ -f ./Makefile.zfs ]; then \
		    ${MAKE} -f Makefile.zfs dnode2.o; \
		else \
		    echo "${CC} ${CFLAGS} -c dnode2.c"; \
		    ${CC} ${CFLAGS} -c dnode2.c; \
		fi;

dproc.o:	${HDR} dproc.c

dsock.o:	${HDR} dsock.c

dstore.o:	${HDR} dstore.c

arg.o:		${HDR} arg.c

main.o:		${HDR} main.c

misc.o:		${HDR} misc.c

node.o:		${HDR} node.c

print.o:	${HDR} print.c

proc.o:		${HDR} proc.c

store.o:	${HDR} store.c

usage.o:	${HDR} version.h usage.c

util.o:		${HDR} util.c

# *** Do not add anything here - It will go away. ***
@


1.11
log
@Revision 4.79
@
text
@d4 1
a4 1
# $Id: Makefile,v 1.10 2001/11/01 20:26:18 abe Exp abe $
d132 1
a132 1
		    make -f Makefile.zfs dnode2.o; \
@


1.10
log
@Revision 4.60
@
text
@d2 1
a2 1
# FreeBSD Makefile
d4 1
a4 1
# $Id: Makefile,v 1.9 1999/11/28 06:40:18 abe Exp abe $
d24 1
a24 1
HDR=    lsof.h lsof_fields.h dlsof.h machine.h proto.h dproto.h
d26 3
a28 2
SRC=    dmnt.c dnode.c dnode1.c dproc.c dsock.c dstore.c \
	arg.c main.c misc.c node.c print.c proc.c store.c usage.c
d30 3
a32 2
OBJ=	dmnt.o dnode.o dnode1.o dproc.o dsock.o dstore.o \
	arg.o main.o misc.o node.o print.o proc.o store.o usage.o
d130 8
d160 2
@


1.9
log
@Revision 4.47
@
text
@d2 3
a4 1
# $Id: Makefile,v 1.8 99/02/25 19:57:21 abe Exp Locker: abe $
d74 1
a74 1
	@@sed '/VN/s/.ds VN \(.*\)/#define	LSOF_VERSION	"\1"/' < version > version.h
d79 9
d89 28
a116 4
	@@echo '#define	LSOF_LOGNAME	"${LOGNAME}"' >> version.h
	@@echo '#define	LSOF_HOST	"'`uname -n`'"' >> version.h
	@@echo '#define	LSOF_SYSINFO	"'`uname -a`'"' >> version.h
	@@echo '#define	LSOF_USER	"${USER}"' >> version.h
@


1.8
log
@Revision 4.41
@
text
@d2 1
a2 1
# $Id: Makefile,v 1.7 99/02/08 15:24:36 abe Exp Locker: abe $
d67 1
a67 1
	(cd lib; ${MAKE} DEBUG="${DEBUG}")
@


1.7
log
@Revision 4.41
@
text
@d2 1
a2 1
# $Id: Makefile,v 1.6 98/02/16 19:48:33 abe Exp Locker: abe $
d76 1
a76 1
	@@echo '#define	LSOF_CCFLAGS	"${CFLAGS}"' >> version.h
@


1.6
log
@Revision 4.26
@
text
@d2 1
a2 1
# $Id: Makefile,v 1.5 97/05/22 15:55:22 abe Exp Locker: abe $
a14 2
DEBUG=	-O

d18 1
a18 1
CFLAGS= ${DEBUG} ${CDEFS} ${INCL}
@


1.5
log
@Revision 4.08
@
text
@d2 1
a2 1
# $Id: Makefile,v 1.4 97/04/29 14:15:59 abe Exp Locker: abe $
d26 2
a27 2
SRC=    dfile.c dmnt.c dnode.c dnode1.c dproc.c dsock.c dstore.c \
	arg.c main.c misc.c node.c print.c proc.c store.c
d29 2
a30 2
OBJ=	dfile.o dmnt.o dnode.o dnode1.o dproc.o dsock.o dstore.o \
	arg.o main.o misc.o node.o print.o proc.o store.o
a88 2
dfile.o:	${HDR} dfile.c

d101 1
a101 1
arg.o:		${HDR} version.h arg.c
d114 2
@


1.4
log
@Revision 4.06 addendum
@
text
@d2 1
a2 1
# $Id: Makefile,v 1.3 97/04/29 10:01:05 abe Exp Locker: abe $
d48 1
a48 1
	(cd lib; make -f Makefile.skel clean)
d50 1
a50 3
dirs: ${BIN} ${DOC}

install: all dirs FRC
d69 1
a69 1
	(cd lib; make DEBUG="${DEBUG}")
@


1.3
log
@Revision 4.06
@
text
@d2 1
a2 1
# $Id: Makefile,v 1.2 97/03/06 13:02:30 abe Exp Locker: abe $
d48 1
a48 1
	(cd lib; make clean)
@


1.2
log
@Revision 4.02; add SHELL=/bin/sh string.
@
text
@d2 1
a2 1
# $Id: Makefile,v 1.1 97/02/24 07:33:02 abe Exp Locker: abe $
d26 1
a26 1
SRC=    dfile.c dmnt.c dnode.c dproc.c dsock.c dstore.c \
d29 1
a29 1
OBJ=	dfile.o dmnt.o dnode.o dproc.o dsock.o dstore.o \
d48 1
d96 2
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# $Id: Makefile,v 1.12 96/01/11 14:49:00 abe Exp $
d35 2
@
