head	1.11;
access;
symbols;
locks; strict;
comment	@ * @;


1.11
date	2018.02.14.14.26.03;	author abe;	state Exp;
branches;
next	1.10;

1.10
date	2008.10.21.16.16.06;	author abe;	state Exp;
branches;
next	1.9;

1.9
date	2005.08.08.19.49.23;	author abe;	state Exp;
branches;
next	1.8;

1.8
date	2005.05.11.12.52.50;	author abe;	state Exp;
branches;
next	1.7;

1.7
date	2004.07.06.19.18.57;	author abe;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.09.21.37.05;	author abe;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.24.11.21.54;	author abe;	state Exp;
branches;
next	1.4;

1.4
date	99.11.28.06.40.27;	author abe;	state Exp;
branches;
next	1.3;

1.3
date	99.05.04.08.57.59;	author abe;	state Exp;
branches;
next	1.2;

1.2
date	97.05.30.16.30.33;	author abe;	state Exp;
branches;
next	1.1;

1.1
date	97.04.29.15.32.31;	author abe;	state Exp;
branches;
next	;


desc
@FreeBSD node functions
@


1.11
log
@Revision 4.90
@
text
@/*
 * dnode1.c - FreeBSD node functions for lsof
 *
 * This module must be separate to keep separate the multiple kernel inode
 * structure definitions.
 */


/*
 * Copyright 1995 Purdue Research Foundation, West Lafayette, Indiana
 * 47907.  All rights reserved.
 *
 * Written by Victor A. Abell
 *
 * This software is not subject to any license of the American Telephone
 * and Telegraph Company or the Regents of the University of California.
 *
 * Permission is granted to anyone to use this software for any purpose on
 * any computer system, and to alter it and redistribute it freely, subject
 * to the following restrictions:
 *
 * 1. Neither the authors nor Purdue University are responsible for any
 *    consequences of the use of this software.
 *
 * 2. The origin of this software must not be misrepresented, either by
 *    explicit claim or by omission.  Credit to the authors and Purdue
 *    University must appear in documentation and sources.
 *
 * 3. Altered versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 *
 * 4. This notice may not be removed or altered.
 */

#ifndef lint
static char copyright[] =
"@@(#) Copyright 1994 Purdue Research Foundation.\nAll rights reserved.\n";
static char *rcsid = "$Id: dnode1.c,v 1.10 2008/10/21 16:16:06 abe Exp abe $";
#endif


#include "lsof.h"

#if	defined(HAS9660FS)

/*
 * Do a little preparation for #include'ing cd9660_node.h, then #include it.
 */

#undef	i_size
#undef	doff_t
#undef	IN_ACCESS

#  if	FREEBSDV>=4000 && defined(__alpha__)
#define	dev_t	void *
#  endif	/* FREEBSDV>=4000 && defined(__alpha__) */

#include "cd9660_node.h"

# if	defined(HAS_NO_ISO_DEV)
#define	_KERNEL
#include <isofs/cd9660/iso.h>
#undef	_KERNEL
# endif	/* defined(HAS_NO_ISO_DEV) */

#  if	FREEBSDV>=4000 && defined(__alpha__)
#undef	dev_t
#  endif	/* FREEBSDV>=4000 && defined(__alpha__) */


/*
 * read_iso_node() -- read CD 9660 iso_node
 */

int
read_iso_node(v, d, dd, ino, nl, sz)
	struct vnode *v;		/* containing vnode */
	dev_t *d;			/* returned device number */
	int *dd;			/* returned device-defined flag */
	INODETYPE *ino;			/* returned inode number */
	long *nl;			/* returned number of links */
	SZOFFTYPE *sz;			/* returned size */
{

# if	FREEBSDV<2000
	struct iso_node *ip;
# else	/* FREEBSDV>=2000 */
	struct iso_node i;
# endif	/* FREEBSDV<2000 */

# if	FREEBSDV>=4000
#  if	FREEBSDV<5000
	struct specinfo udev;
#  else	/* FREEBSDV>=5000 */
	struct cdev udev;
#   if	defined(HAS_NO_ISO_DEV)
	struct iso_mnt im;
#   endif	/* defined(HAS_NO_ISO_DEV) */
#  endif	/* FREEBSDV<5000 */
# endif	/* FREEBSDV>=4000 */

# if	FREEBSDV<2000
	ip = (struct iso_node *)v->v_data;
	*d = ip->i_dev;
	*dd = 1;
	*ino = (INODETYPE)ip->i_number;
	*nl = (long)ip->inode.iso_links;
	*sz = (SZOFFTYPE)ip->i_size;
# else	/* FREEBSDV>=2000 */
	if (!v->v_data
	||  kread((KA_T)v->v_data, (char *)&i, sizeof(i)))
	    return(1);

# if	FREEBSDV>=4000
#  if	defined(HAS_NO_ISO_DEV)
	if (i.i_mnt && !kread((KA_T)i.i_mnt, (char *)&im, sizeof(im))
	&&  im.im_dev && !kread((KA_T)im.im_dev, (char *)&udev, sizeof(udev)))
#  else	/* !defined(HAS_NO_ISO_DEV) */
	if (i.i_dev && !kread((KA_T)i.i_dev, (char *)&udev, sizeof(udev)))
#  endif	/* defined(HAS_NO_ISO_DEV) */

	{

# if	defined(HAS_NO_SI_UDEV)
	    *d = Dev2Udev(&udev);
# else	/* !defined(HAS_NO_SI_UDEV) */
	    *d = udev.si_udev;
# endif	/* defined(HAS_NO_SI_UDEV) */

	    *dd = 1;
	}
# else	/* FREEBSDV<4000 */
	*d = i.i_dev;
	*dd = 1;
# endif	/* FREEBSDV>=4000 */

	*ino = (INODETYPE)i.i_number;
	*nl = (long)i.inode.iso_links;
	*sz = (SZOFFTYPE)i.i_size;
# endif	/* FREEBSDV<2000 */

	return(0);
}
#endif	/* defined(HAS9660FS) */


#if	defined(HASFUSEFS)
#include <fs/fuse/fuse_node.h>
/*
 * read_fuse_node() -- read FUSE file system fuse_node
 */

int
read_fuse_node(v, d, dd, ino, nl, sz)
	struct vnode *v;		/* containing vnode */
	dev_t *d;			/* returned device number */
	int *dd;			/* returned device-defined flag */
	INODETYPE *ino;			/* returned inode number */
	long *nl;			/* returned number of links */
	SZOFFTYPE *sz;			/* returned size */
{
	struct fuse_vnode_data fn;	/* FUSE node */

	if (!v->v_data
	||  kread((KA_T)v->v_data, (char *)&fn, sizeof(fn)))
	    return(1);
	*d = fn.cached_attrs.va_fsid;
	*dd = 1;
	*ino = (INODETYPE)fn.cached_attrs.va_fileid;
	*nl = (long)fn.cached_attrs.va_nlink;
	*sz = (SZOFFTYPE)fn.cached_attrs.va_size;
	return(0);
}
#endif	/* defined(HASFUSEFS) */
@


1.10
log
@Revision 4.81
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.9 2005/08/08 19:49:23 abe Exp abe $";
d145 30
@


1.9
log
@Revision 4.76
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.8 2005/05/11 12:52:50 abe Exp abe $";
d125 1
a125 1
	    *d = dev2udev(&udev);
@


1.8
log
@Revision 4.75
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.7 2004/07/06 19:18:57 abe Exp abe $";
d80 1
a80 1
	unsigned long *ino;		/* returned inode number */
d82 1
a82 1
	unsigned long *sz;		/* returned size */
d106 1
a106 1
	*ino = ip->i_number;
d108 1
a108 1
	*sz = ip->i_size;
d137 1
a137 1
	*ino = i.i_number;
d139 1
a139 1
	*sz = i.i_size;
@


1.7
log
@Revision 4.72
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.6 2002/10/09 21:37:05 abe Exp abe $";
d60 6
d96 3
d115 12
a126 1
	if (i.i_dev && !kread((KA_T)i.i_dev, (char *)&udev, sizeof(udev))) {
d128 2
@


1.6
log
@Revision 4.65 addenda for 5.0-CURRENT
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.5 2002/04/24 11:21:54 abe Exp abe $";
d54 1
a54 1
#  if	FREEBSDV>=400 && defined(__alpha__)
d56 1
a56 1
#  endif	/* FREEBSDV>=400 && defined(__alpha__) */
d60 1
a60 1
#  if	FREEBSDV>=400 && defined(__alpha__)
d62 1
a62 1
#  endif	/* FREEBSDV>=400 && defined(__alpha__) */
d79 1
a79 1
# if	FREEBSDV200
d81 1
a81 1
# else	/* FREEBSD>=200 */
d83 1
a83 1
# endif	/* FREEBSDV<200 */
d85 2
a86 2
# if	FREEBSDV>=400
#  if	FREEBSDV<500
d88 1
a88 1
#  else	/* FREEBSDV>=500 */
d90 2
a91 2
#  endif	/* FREEBSDV<500 */
# endif	/* FREEBSDV>=400 */
d93 1
a93 1
# if	FREEBSDV<200
d100 1
a100 1
# else	/* FREEBSDV>=200 */
d105 1
a105 1
# if	FREEBSDV>=400
d110 1
a110 1
# else	/* FREEBSDV<400 */
d113 1
a113 1
# endif	/* FREEBSDV>=400 */
d118 1
a118 1
# endif	/* FREEBSDV<200 */
@


1.5
log
@Post-revision 3.63
Remove extra stuff from pre-processor directives.
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.4 1999/11/28 06:40:27 abe Exp abe $";
d86 1
d88 3
@


1.4
log
@Revision 4.47
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.3 99/05/04 08:57:59 abe Exp Locker: abe $";
d50 1
a50 1
#undef	i_size;
@


1.3
log
@Revision 4.43
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.2 97/05/30 16:30:33 abe Exp Locker: abe $";
d54 4
d60 3
d64 1
d70 1
a70 1
read_iso_node(v, d, ino, nl, sz)
d73 1
d85 3
d92 1
d100 7
d108 3
@


1.2
log
@Revision 4.09
Handle cd9660 better.
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.1 97/04/29 15:32:31 abe Exp Locker: abe $";
d62 1
a62 1
read_iso_node(v, d, ino, sz)
d66 1
d81 1
d89 1
@


1.1
log
@Initial revision
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.1 97/02/24 07:33:51 abe Exp $";
a44 8
/*
 * The netexport stucture is defined in <sys/mount.h>, but getting its
 * definition requires defining KERNEL, and doing that breaks other things.
 * Since the nextexport structure definition only affects the iso_mnt structure
 * (<isofs/cd9660/iso.h>) and since the iso_mnt structure definition only
 * appears in the iso_node structure definition as a pointer cast, it seemed
 * easiest to make this dummy netexport structure definition.
 */
a45 5
struct netexport {
	int dummy;
};


d47 1
a47 2
 * These argument definitions aren't in a header file with a constant path.
 * Since they're only used in function prototypes, dummies server as well.
a49 20
struct vop_access_args;
struct vop_abortop_args;
struct vop_bmap_args;
struct vop_close_args;
struct vop_getattr_args;
struct vop_inactive_args;
struct vop_ioctl_args;
struct vop_islocked_args;
struct vop_lookup_args;
struct vop_lock_args;
struct vop_mmap_args;
struct vop_open_args;
struct vop_print_args;
struct vop_reclaim_args;
struct vop_read_args;
struct vop_readdir_args;
struct vop_seek_args;
struct vop_select_args;
struct vop_strategy_args;
struct vop_unlock_args;
d51 2
d54 1
a54 7

/*
 * At last, #include the desired header files.
 */

#include <isofs/cd9660/iso.h>
#include <isofs/cd9660/cd9660_node.h>
@
