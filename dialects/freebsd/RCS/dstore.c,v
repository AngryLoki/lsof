head	1.9;
access;
symbols;
locks; strict;
comment	@ * @;


1.9
date	2018.02.14.14.26.03;	author abe;	state Exp;
branches;
next	1.8;

1.8
date	2008.04.15.13.31.47;	author abe;	state Exp;
branches;
next	1.7;

1.7
date	2004.07.06.19.18.57;	author abe;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.04.14.25.24;	author abe;	state Exp;
branches;
next	1.5;

1.5
date	99.05.09.14.55.46;	author abe;	state Exp;
branches;
next	1.4;

1.4
date	99.05.04.08.57.43;	author abe;	state Exp;
branches;
next	1.3;

1.3
date	99.04.27.15.48.41;	author abe;	state Exp;
branches;
next	1.2;

1.2
date	97.05.30.16.31.43;	author abe;	state Exp;
branches;
next	1.1;

1.1
date	97.02.24.07.33.19;	author abe;	state Exp;
branches;
next	;


desc
@Lsof version 4
@


1.9
log
@Revision 4.90
@
text
@/*
 * dstore.c - FreeBSD global storage for lsof
 */


/*
 * Copyright 1994 Purdue Research Foundation, West Lafayette, Indiana
 * 47907.  All rights reserved.
 *
 * Written by Victor A. Abell
 *
 * This software is not subject to any license of the American Telephone
 * and Telegraph Company or the Regents of the University of California.
 *
 * Permission is granted to anyone to use this software for any purpose on
 * any computer system, and to alter it and redistribute it freely, subject
 * to the following restrictions:
 *
 * 1. Neither the authors nor Purdue University are responsible for any
 *    consequences of the use of this software.
 *
 * 2. The origin of this software must not be misrepresented, either by
 *    explicit claim or by omission.  Credit to the authors and Purdue
 *    University must appear in documentation and sources.
 *
 * 3. Altered versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 *
 * 4. This notice may not be removed or altered.
 */

#ifndef lint
static char copyright[] =
"@@(#) Copyright 1994 Purdue Research Foundation.\nAll rights reserved.\n";
static char *rcsid = "$Id: dstore.c,v 1.8 2008/04/15 13:31:47 abe Exp abe $";
#endif


#include "lsof.h"

struct file *Cfp;			/* curent file's file struct pointer */


/*
 * Drive_Nl -- table to drive the building of Nl[] via build_Nl()
 *             (See lsof.h and misc.c.)
 */

struct drive_Nl Drive_Nl[] = {

	{ X_BADFILEOPS,	"badfileops"	},

#if	FREEBSDV<2005
	{ X_NCACHE,	"_nchhead"	},
#else	/* FREEBSDV>=2005 */
# if	FREEBSDV<2010
	{ X_NCACHE,	"_nclruhead"	},
# else	/* FREEBSDV>=2010 */
	{ X_NCACHE,	"_nchashtbl"	},
# endif	/* FREEBSDV<2010 */
#endif	/* FREEBSDV<2005 */

#if	FREEBSDV<2010
	{ X_NCSIZE,	"_numcache"	},
#else	/* FREEBSDV>=2010 */
	{ X_NCSIZE,	"_nchash"	},
#endif	/* FREEBSDV<2010 */

	{ "",		""		},
	{ NULL,		NULL		}
};

#if	FREEBSDV>=2000
kvm_t *Kd = NULL;			/* kvm descriptor */
#endif	/* FREEBSDV>=2000 */

#if	defined(P_ADDR)
KA_T Kpa;				/* kernel proc struct address */
#endif	/* defined(P_ADDR) */

struct l_vfs *Lvfs = NULL;		/* local vfs structure table */

int Np = 0;				/* number of kernel processes */

#if	FREEBSDV>=2000
struct kinfo_proc *P = NULL;		/* local process table copy */
#endif	/* FREEBSDV>=2000 */

#if	defined(HASFSTRUCT)
/*
 * Pff_tab[] - table for printing file flags
 */

struct pff_tab Pff_tab[] = {
	{ (long)FREAD,		FF_READ		},
	{ (long)FWRITE,		FF_WRITE	},
	{ (long)FNONBLOCK,	FF_NBLOCK	},
	{ (long)FNDELAY,	FF_NDELAY	},
	{ (long)FAPPEND,	FF_APPEND	},
	{ (long)FASYNC,		FF_ASYNC	},
	{ (long)FFSYNC,		FF_FSYNC	},

# if	defined(FMARK)
	{ (long)FMARK,		FF_MARK		},
# endif	/* defined(FMARK) */

# if	defined(FDEFER)
	{ (long)FDEFER,		FF_DEFER	},
# endif	/* defined(FDEFER) */

	{ (long)FHASLOCK,	FF_HASLOCK	},
	{ (long)O_NOCTTY,	FF_NOCTTY	},
	{ (long)0,		NULL 		}
};


/*
 * Pof_tab[] - table for print process open file flags
 */

struct pff_tab Pof_tab[] = {

# if	defined(UF_EXCLOSE)
	{ (long)UF_EXCLOSE,	POF_CLOEXEC	},
# endif	/* defined(UF_EXCLOSE) */

# if	defined(UF_MAPPED)
	{ (long)UF_MAPPED,	POF_MAPPED	},
# endif	/* defined(UF_MAPPED) */

	{ (long)0,		NULL		}
};
#endif	/* defined(HASFSTRUCT) */


/*
 * Kernel's bad file operations address
 */

KA_T X_bfopsa;				/* badfileops kernel address */
@


1.8
log
@Revision 4.79
@
text
@d35 1
a35 1
static char *rcsid = "$Id: dstore.c,v 1.7 2004/07/06 19:18:57 abe Exp abe $";
d51 2
d134 7
@


1.7
log
@Revision 4.72
@
text
@d35 1
a35 1
static char *rcsid = "$Id: dstore.c,v 1.6 2000/12/04 14:25:24 abe Exp abe $";
d100 2
d103 3
d107 2
@


1.6
log
@Revision 4.53
@
text
@d35 1
a35 1
static char *rcsid = "$Id: dstore.c,v 1.5 1999/05/09 14:55:46 abe Exp abe $";
d51 1
a51 1
#if	FREEBSDV<205
d53 2
a54 2
#else	/* FREEBSDV>=205 */
# if	FREEBSDV<210
d56 1
a56 1
# else	/* FREEBSDV>=210 */
d58 2
a59 2
# endif	/* FREEBSDV<210 */
#endif	/* FREEBSDV<205 */
d61 1
a61 1
#if	FREEBSDV<210
d63 1
a63 1
#else	/* FREEBSDV>=210 */
d65 1
a65 1
#endif	/* FREEBSDV<210 */
d71 1
a71 1
#if	FREEBSDV>=200
d73 1
a73 1
#endif	/* FREEBSDV>=200 */
d83 1
a83 1
#if	FREEBSDV>=200
d85 1
a85 1
#endif	/* FREEBSDV>=200 */
@


1.5
log
@Revision 4.43
@
text
@d35 1
a35 1
static char *rcsid = "$Id: dstore.c,v 1.4 99/05/04 08:57:43 abe Exp Locker: abe $";
d114 1
d116 3
d120 2
@


1.4
log
@Revision 4.43
@
text
@d35 1
a35 1
static char *rcsid = "$Id: dstore.c,v 1.3 99/04/27 15:48:41 abe Exp Locker: abe $";
d105 12
@


1.3
log
@Revision 4.43
@
text
@d35 1
a35 1
static char *rcsid = "$Id: dstore.c,v 1.2 97/05/30 16:31:43 abe Exp Locker: abe $";
d93 12
a104 12
	{ (long)FREAD,		"R"	},
	{ (long)FWRITE,		"W"	},
	{ (long)FNONBLOCK,	"NB"	},
	{ (long)FNDELAY,	"ND"	},
	{ (long)FAPPEND,	"AP"	},
	{ (long)FASYNC,		"ASYN"	},
	{ (long)FFSYNC,		"FSYN"	},
	{ (long)FMARK,		"MK"	},
	{ (long)FDEFER,		"DF"	},
	{ (long)FHASLOCK,	"LCK"	},
	{ (long)O_NOCTTY,	"NTTY"	},
	{ (long)0,		NULL }
@


1.2
log
@Revision 4.09
@
text
@d35 1
a35 1
static char *rcsid = "$Id: dstore.c,v 1.1 97/02/24 07:33:19 abe Exp Locker: abe $";
d86 21
@


1.1
log
@Initial revision
@
text
@d35 1
a35 1
static char *rcsid = "$Id: dstore.c,v 1.8 96/12/28 11:23:09 abe Exp $";
d54 1
d56 3
d61 1
d63 4
d68 1
a68 1
	{ NULL<		NULL		}
@
