head	1.19;
access;
symbols;
locks; strict;
comment	@ * @;


1.19
date	2007.04.24.16.25.30;	author abe;	state Exp;
branches;
next	1.18;

1.18
date	2005.08.08.19.50.23;	author abe;	state Exp;
branches;
next	1.17;

1.17
date	2004.01.16.05.34.19;	author abe;	state Exp;
branches;
next	1.16;

1.16
date	2000.12.04.14.26.14;	author abe;	state Exp;
branches;
next	1.15;

1.15
date	2000.05.31.13.04.59;	author abe;	state Exp;
branches;
next	1.14;

1.14
date	2000.03.14.20.39.00;	author abe;	state Exp;
branches;
next	1.13;

1.13
date	99.11.28.06.46.05;	author abe;	state Exp;
branches;
next	1.12;

1.12
date	99.06.22.08.16.43;	author abe;	state Exp;
branches;
next	1.11;

1.11
date	99.04.27.15.54.03;	author abe;	state Exp;
branches;
next	1.10;

1.10
date	98.08.18.08.08.36;	author abe;	state Exp;
branches;
next	1.9;

1.9
date	98.05.11.13.05.34;	author abe;	state Exp;
branches;
next	1.8;

1.8
date	98.05.11.12.43.26;	author abe;	state Exp;
branches;
next	1.7;

1.7
date	98.04.29.13.39.38;	author abe;	state Exp;
branches;
next	1.6;

1.6
date	98.03.06.08.21.23;	author abe;	state Exp;
branches;
next	1.5;

1.5
date	98.02.13.12.43.27;	author abe;	state Exp;
branches;
next	1.4;

1.4
date	97.12.11.15.59.23;	author abe;	state Exp;
branches;
next	1.3;

1.3
date	97.10.23.12.23.02;	author abe;	state Exp;
branches;
next	1.2;

1.2
date	97.08.15.08.19.49;	author abe;	state Exp;
branches;
next	1.1;

1.1
date	97.02.24.07.33.46;	author abe;	state Exp;
branches;
next	;


desc
@Lsof version 4
@


1.19
log
@Revision 4.78
@
text
@/*
 * dlsof.h - /dev/kmem-based HP-UX header file for lsof
 */


/*
 * Copyright 1994 Purdue Research Foundation, West Lafayette, Indiana
 * 47907.  All rights reserved.
 *
 * Written by Victor A. Abell
 *
 * This software is not subject to any license of the American Telephone
 * and Telegraph Company or the Regents of the University of California.
 *
 * Permission is granted to anyone to use this software for any purpose on
 * any computer system, and to alter it and redistribute it freely, subject
 * to the following restrictions:
 *
 * 1. Neither the authors nor Purdue University are responsible for any
 *    consequences of the use of this software.
 *
 * 2. The origin of this software must not be misrepresented, either by
 *    explicit claim or by omission.  Credit to the authors and Purdue
 *    University must appear in documentation and sources.
 *
 * 3. Altered versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 *
 * 4. This notice may not be removed or altered.
 */


/*
 * $Id: dlsof.h,v 1.18 2005/08/08 19:50:23 abe Exp abe $
 */


#if	!defined(HPUX_LSOF_H)
#define	HPUX_LSOF_H	1

# if	HPUXV>=1030
#include <fcntl.h>
# endif	/* HPUXV>=1030 */

#include <stdlib.h>
#include <dirent.h>
#include <mntent.h>
#include <setjmp.h>
#include <string.h>
#include <nlist.h>
#include <unistd.h>

# if	HPUXV<1020
#include <sys/vnode.h>
# endif	/* HPUXV<1020 */

# if	HPUXV>=1030
/*
 * Include header files for HP-UX 10.30 and up that have been
 * manufactured with q4 and hand edited.
 */

#include "lla.h"
#include "proc.h"
#include "rnode.h"
#include "nfs_clnt.h"
#include "vnode.h"
# endif	/* HPUXV>=1030 */

#include <sys/domain.h>

# if	HPUXV>=1020
#define	_INCLUDE_STRUCT_FILE
# endif	/* HPUXV>=1020 */

# if	HPUXV>=1030
struct uio {		/* to satisfy function prototypes in <sys/file.h> */
	int dummy;
};
# endif	/* HPUXV>=1030 */

#include <sys/file.h>

# if	HPUXV>=1020
#undef	_INCLUDE_STRUCT_FILE
# endif	/* HPUXV>=1020 */

# if	HPUXV>=1030
#include <sys/stream.h>
#include "sth.h"
# endif	/* HPUXV>=1030 */

#include <sys/mbuf.h>

# if	HPUXV>=800
#undef	_PROTOTYPES
#include <sys/pstat.h>
# endif	/* HPUXV>=800 */

#include <sys/resource.h>

# if	HPUXV<1010
#include <sys/proc.h>
# endif	/* HPUXV<1010 */

#include <sys/protosw.h>
#include <sys/socket.h>
#include <sys/socketvar.h>
#include <netinet/in.h>
#include <net/route.h>

# if	HPUXV<1030
#include <net/raw_cb.h>
#include <netinet/in_pcb.h>
# endif	/* HPUXV<1030 */

#include <netinet/ip_var.h>
#include <netinet/tcp.h>
#include <netinet/tcpip.h>

# if	HPUXV<1030
#include <netinet/tcp_fsm.h>
#include <netinet/tcp_timer.h>
#include <netinet/tcp_var.h>
# else	/* HPUXV>=1030 */
#include <sys/tihdr.h>
/*
 * Include header files for HP-UX 10.30 and up that have been
 * manufactured with q4 and hand editing.
 */

#include "ipc_s.h"
#include "tcp_s.h"
#include "udp_s.h"
# endif	/* HPUXV<1030 */

# if	HPUXV>=1030
#undef	TCP_NODELAY
#undef	TCP_MAXSEG
# endif	/* HPUXV>=1030 */

#include <rpc/types.h>
#include <rpc/rpc.h>
#include <rpc/pmap_prot.h>

# if	HPUXV>=1030
#include <rpc/clnt_soc.h>
# endif	/* HPUXV>=1030 */

# if	HPUXV>=1000
#include <rpc/xdr.h>
#include <rpc/auth.h>
#include <rpc/clnt.h>
#include <sys/cdfsdir.h>
#include <sys/cdfs.h>
#include <sys/cdnode.h>
# endif	/* HPUXV>=1000 */

#include <nfs/nfs.h>

/*
 * Structure for Atria's MVFS node (ancestry: lsof 3.61 or older)
 */

struct mvfsnode {
	unsigned long d1[6];
	unsigned long m_ino;			/* node number */
};

# if	HPUXV<1030
#include <nfs/nfs_clnt.h>
#  if	defined(HASRNODE3)
/*
 * This rnode structure definition should come from <nfs/rnode.h>, but HP-UX
 * patched the kernel structures of NFS3 at PHNE_18173, PHNE_19426, PHNE_19937,
 * and PHNE_20091 and didn't supply an updated <nfs/rnode.h>.
 *
 * This definition of rnode was derived via /usr/contrib/binq4.
 */

struct rnode {
	struct rnode *r_next;
	struct vnode r_vnode;
	u_int r_fh3;
	fhandle_t r_fh;
	u_short r_flags;
	short r_error;
	daddr_t r_lastr;
	k_off_t r_size;
	k_off_t r_cachedsize;
	struct ucred *r_rcred;
	struct ucred *r_wcred;
	struct ucred *r_unlcred;
	int *r_unlname;
	struct vnode *r_unldvp;
	struct nfsfattr r_nfsattr;
};
#  else	/* !defined(HASRNODE3) */
#include <nfs/rnode.h>
#  endif	/* defined(HASRNODE3) */
# endif	/* HPUXV<1030 */

#include <nfs/snode.h>

# if	HPUXV>=1000
#define	_KERNEL
#include <nfs/fifonode.h>
#undef	_KERNEL
# endif	/* HPUXV>=1000 */

# if	defined(DTYPE_LLA) && HPUXV<1030
#define	_KERNEL	1
#include <sio/lla.h>
#undef	_KERNEL
# endif	/* defined(DTYPE_LLA) && HPUXV<1030 */

#include <sys/un.h>
#include <sys/unpcb.h>
#include <sys/vfs.h>
#include <sys/vmmac.h>
#include <sys/user.h>

/*
 * The hpux_mount.h header file is manufactured from <sys/mount.h> by the
 * Configure script to get the mount structure without needing to define
 * _KERNEL when including <sys/mount.h>.  Defining _KERNEL causes unresolvable
 * header file complications.
 */

#include "hpux_mount.h"

# if	HPUXV>=800
/*
 * These definitions are from <sys/vfs.h>, defined under the _KERNEL symbol.
 * Unfortunately, defining _KERNEL causes <sys/vfs.h> to include other
 * header files not in <sys>.
 */
#define MOUNT_UFS 0
#define MOUNT_NFS 1
#define MOUNT_CDFS 2
# endif	/* HPUXV>=800 */

# if	defined(HAS_CONST)
#define	COMP_P		const void
# else	/* !defined(HAS_CONST) */
#define	COMP_P		void
# endif	/* defined(HAS_CONST) */

# if	HPUXV>=800
#define	CURDIR	p->p_cdir
#define	ROOTDIR	p->p_rdir
# else	/* HPUXV<800 */
#define CURDIR	u->u_cdir
#define	ROOTDIR	u->u_rdir
# endif	/* HPUXV>=800 */

#define DEVINCR		1024	/* device table malloc() increment */

# if	HPUXV<1030
/*
 * KA_T is defined in dialects/hpux/kmem/hpux11/kernbits.h for HP-UX 10.30
 * and above.
 */
typedef	off_t		KA_T;
# endif	/* HPUXV<1030 */

#define	KMEM		"/dev/kmem"
#define MALLOC_P	void
#define FREE_P		void
#define MALLOC_S	unsigned
#define MOUNTED		MNT_MNTTAB

# if	HPUXV<1000
#define N_UNIX		"/hp-ux"
# else	/* HPUXV>=1000 */
#define N_UNIX		"/stand/vmunix"
# endif	/* HPUXV<1000 */

#define QSORT_P		void
#define	READLEN_T	int
#define STRNCPY_L	size_t

# if	HPUXV>=1000
#define	SZOFFTYPE	unsigned long long
				/* type for size and offset */
#define	SZOFFPSPEC	"ll"	/* SZOFFTYPE printf specification modifier */
# endif	/* HPUXV>=1000 */

#define SWAP		"/dev/swap"

# if	HPUXV<800
#define unp_addr	unp_locaddr
/*
 * HP-UX <8 SWAP must be read in DEV_BSIZE chunks.
 */
#define U_SIZE		(((DEV_BSIZE+sizeof(struct user))/DEV_BSIZE)*DEV_BSIZE)
# endif	/* HPUXV<800 */

# if	HPUXV>=800
#define	U_SIZE		sizeof(struct user)
# endif	/* HPUXV>=800 */

# if	HPUXV>=1030
#define	XDR_PMAPLIST	(xdrproc_t)xdr_pmaplist
#define	XDR_VOID	(xdrproc_t)xdr_void
# endif	/* HPUXV>=1030 */


# if	defined(HAS_AFS)
/*
 * AFS definitions
 */

#define	AFSAPATHDEF	"/usr/adm/afs/kload"
#define	AFSDEV		1		/* AFS "fake" device number */

#  if	defined(HASAOPT)
extern char *AFSApath;			/* alternate AFS name list path
					 * (from -A) */
#  endif	/* defined(HASAOPT) */

extern struct vfs *AFSVfsp;		/* AFS struct vfs kernel pointer */
# endif	/* defined(HAS_AFS) */


/*
 * Global storage definitions (including their structure definitions)
 */

extern int CloneMaj;
extern int HaveCloneMaj;
extern int Kd;
extern KA_T Kpa;

# if	HPUXV>=1010
extern KA_T Ktp;
#endif	/* HPUXV>=1010 */

struct l_vfs {
	KA_T addr;			/* kernel address */
	dev_t dev;			/* device */
	char *dir;			/* mounted directory */
	char *fsname;			/* file system name */

# if	defined(HASFSINO)
	INODETYPE fs_ino;		/* file system inode number */
# endif	/* defined(HASFSINO) */

	struct l_vfs *next;		/* forward link */
};
extern struct l_vfs *Lvfs;

# if	HPUXV<800
extern int Mem;
# endif	/* HPUXV<800 */

struct mounts {
	char *dir;              	/* directory (mounted on) */
	char *fsname;           	/* file system
					 * (symbolic links unresolved) */
	char *fsnmres;           	/* file system
					 * (symbolic links resolved) */
	dev_t dev;              	/* directory st_dev */
	dev_t rdev;			/* directory st_rdev */
	INODETYPE inode;		/* directory st_ino */
	mode_t mode;			/* directory st_mode */
	mode_t fs_mode;			/* file system st_mode */
	struct mounts *next;    	/* forward link */
};

#define	X_NCACHE	"ncache"
#define	X_NCSIZE	"ncsize"
#define	NL_NAME		n_name

# if	HPUXV<800 && defined(hp9000s800)
extern int npids;
extern struct proc *proc;
# endif	/* HPUXV<800 && defined(hp9000s800) */

struct sfile {
	char *aname;			/* argument file name */
	char *name;			/* file name (after readlink()) */
	char *devnm;			/* device name (optional) */
	dev_t dev;			/* device */
	dev_t rdev;			/* raw device */
	u_short mode;			/* S_IFMT mode bits from stat() */
	int type;			/* file type: 0 = file system
				 	 *	      1 = regular file */
	INODETYPE i;			/* inode number */
	int f;				/* file found flag */
	struct sfile *next;		/* forward link */
};

# if	HPUXV<800
extern int Swap;
# endif	/* HPUXV<800 */

# if	HPUXV<800 && defined(hp9000s800)
extern struct user *ubase;
# endif	/* HPUXV<800 && defined(hp9000s800) */

# if	HPUXV<800 && defined(hp9000s300)
extern struct pte *Usrptmap;
extern struct pte *usrpt;
# endif	/* HPUXV<800 && defined(hp9000s300) */

extern KA_T Vnfops;


/*
 * Definitions for dvch.c, isfn.c, and rdev.c
 */

#define	CLONEMAJ	CloneMaj	/* clone major variable name */
#define	DIRTYPE		dirent		/* directory structure type */
#define HASDNAMLEN	1		/* DIRTYPE has d_namlen element */
#define	HAS_STD_CLONE	1		/* uses standard clone structure */
#define	HAVECLONEMAJ	HaveCloneMaj	/* clone major status variable name */
#define	MAXSYSCMDL	(PST_CLEN - 1)


/*
 * Definition for rmnt.c
 */

#define MNTSKIP \
	{ if (strcmp(mp->mnt_type, MNTTYPE_IGNORE) == 0) \
		continue; }

/*
 * Definitions for rnch.c
 */

# if     defined(HASNCACHE)
#include <sys/dnlc.h>
#  if	HPUXV<1000
#define	ADDR_NCACHE	1
#  endif	/* HPUXV<1000 */
# endif  /* defined(HASNCACHE) */

#endif	/* HPUX_LSOF_H */
@


1.18
log
@Revision 4.76
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.17 2004/01/16 05:34:19 abe Exp abe $
d419 1
@


1.17
log
@Revision 4.70
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.16 2000/12/04 14:26:14 abe Exp abe $
d60 1
a60 1
 * manufactured with q4 and hand editing.
d346 1
a346 1
	ino_t fs_ino;			/* file system inode number */
d365 1
a365 1
	ino_t inode;			/* directory st_ino */
d389 1
a389 1
	ino_t i;			/* inode number */
@


1.16
log
@Revision 4.53
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.15 2000/05/31 13:04:59 abe Exp abe $
d261 1
a261 1
 * KA_T is defined in dialects/hpux/hpux11/kernbits.h for HP-UX 10.30
@


1.15
log
@Revision 4.50
Add mvsnode structure definition.
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.14 2000/03/14 20:39:00 abe Exp abe $
d385 1
@


1.14
log
@Revision 4.49
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.13 1999/11/28 06:46:05 abe Exp abe $
d160 9
@


1.13
log
@Revision 4.47
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.12 99/06/22 08:16:43 abe Exp Locker: abe $
d401 1
a401 1
 * Definitions for dvch.c,  isfn.c, and rdev.c
@


1.12
log
@Revision 4.44
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.11 99/04/27 15:54:03 abe Exp Locker: abe $
d163 27
d191 1
@


1.11
log
@Revision 4.43
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.10 98/08/18 08:08:36 abe Exp Locker: abe $
d293 2
d373 1
a373 1
 * Definitions for rdev.c
d376 5
a380 2
#define	DIRTYPE	dirent
#define HASDNAMLEN	1	/* struct DIRTYPE has d_namlen element */
@


1.10
log
@Revision 4.37
@
text
@d2 1
a2 1
 * dlsof.h - HP-UX header file for lsof
d34 1
a34 1
 * $Id: dlsof.h,v 1.9 98/05/11 13:05:34 abe Exp Locker: abe $
@


1.9
log
@Revision 4.32
Kernbits.h needs <sys/types.h>.
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.8 98/05/11 12:43:26 abe Exp Locker: abe $
d187 4
a190 3
 * This is from <sys/mount.h>, defined under the _KERNEL symbol.
 * Unfortunately, defining _KERNEL causes <sys/mount.h> to include
 * other header files not in <sys>.
d193 1
a193 8
struct mount {
	struct	mount *m_hforw;  /* forward hash pointer */
	struct	mount *m_hback;  /* backward hash pointer */
	struct	mount *m_rhforw; /* forward hash pointer for real device */
	struct	mount *m_rhback; /* backward hash pointer for real device */
	struct vfs	*m_vfsp; /* vfs structure for this filesystem */
	dev_t	m_dev;		 /* device mounted */
   };
@


1.8
log
@Revision 4.32
Let KA_T be defined in kernbits.h for HP-UX 10.30 and above.
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.7 98/04/29 13:39:38 abe Exp Locker: abe $
a41 1
#include <sys/types.h>
@


1.7
log
@Revision 4.32
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.6 98/03/06 08:21:23 abe Exp Locker: abe $
d228 6
d235 2
@


1.6
log
@Revision 4.27
Add HP-UX 11 support, etc.
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.5 98/02/13 12:43:27 abe Exp Locker: abe $
d228 1
a228 5

# if	!defined(KA_T)
#define	KA_T		off_t
# endif	/* !defined(KA_T) */

@


1.5
log
@Revision 4.26
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.4 97/12/11 15:59:23 abe Exp Locker: abe $
d41 5
d58 13
d74 1
a74 1
#define	_INCLUDE_STRUCT_FILE	1
d77 6
d89 5
d112 2
d116 2
d121 2
d126 17
d147 4
d161 2
d165 2
d175 1
a175 1
# if	defined(DTYPE_LLA)
d179 1
a179 1
# endif
d228 2
d231 2
d269 4
d274 1
d300 1
a300 1
extern caddr_t Ktp;
d304 1
a304 1
	struct vfs *addr;		/* kernel address */
d370 1
a370 1
extern struct fileops *Vnfops;
@


1.4
log
@Revision 4.22
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.3 97/10/23 12:23:02 abe Exp Locker: abe $
d253 10
a262 5
	dev_t dev;              	/* st_dev */
	char *dir;              	/* directory */
	char *fsname;           	/* file system */
	ino_t inode;			/* st_ino */
	mode_t mode;			/* st_mode */
a263 1
	dev_t rdev;			/* st_rdev */
@


1.3
log
@Revision 4.18
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.2 97/08/15 08:19:49 abe Exp Locker: abe $
d92 2
@


1.2
log
@Revision 4.15
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.1 97/02/24 07:33:46 abe Exp Locker: abe $
d182 7
@


1.1
log
@Initial revision
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.15 96/12/28 11:25:01 abe Exp $
d85 6
@
