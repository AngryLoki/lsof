head	1.11;
access;
symbols;
locks; strict;
comment	@ * @;


1.11
date	2005.08.08.19.50.23;	author abe;	state Exp;
branches;
next	1.10;

1.10
date	2005.05.11.12.56.47;	author abe;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.19.13.30.18;	author abe;	state Exp;
branches;
next	1.8;

1.8
date	2000.12.04.14.26.14;	author abe;	state Exp;
branches;
next	1.7;

1.7
date	99.05.04.08.58.52;	author abe;	state Exp;
branches;
next	1.6;

1.6
date	99.04.27.15.54.09;	author abe;	state Exp;
branches;
next	1.5;

1.5
date	98.08.18.08.08.46;	author abe;	state Exp;
branches;
next	1.4;

1.4
date	98.07.17.08.54.52;	author abe;	state Exp;
branches;
next	1.3;

1.3
date	98.03.06.08.21.28;	author abe;	state Exp;
branches;
next	1.2;

1.2
date	97.10.23.12.23.46;	author abe;	state Exp;
branches;
next	1.1;

1.1
date	97.02.24.07.33.51;	author abe;	state Exp;
branches;
next	;


desc
@Lsof version 4
@


1.11
log
@Revision 4.76
@
text
@/*
 * dnode1.c - /dev/kmem-based HP-UX node functions for lsof
 *
 * This module must be separate to keep separate the multiple kernel inode
 * structure definitions.
 */


/*
 * Copyright 1995 Purdue Research Foundation, West Lafayette, Indiana
 * 47907.  All rights reserved.
 *
 * Written by Victor A. Abell
 *
 * This software is not subject to any license of the American Telephone
 * and Telegraph Company or the Regents of the University of California.
 *
 * Permission is granted to anyone to use this software for any purpose on
 * any computer system, and to alter it and redistribute it freely, subject
 * to the following restrictions:
 *
 * 1. Neither the authors nor Purdue University are responsible for any
 *    consequences of the use of this software.
 *
 * 2. The origin of this software must not be misrepresented, either by
 *    explicit claim or by omission.  Credit to the authors and Purdue
 *    University must appear in documentation and sources.
 *
 * 3. Altered versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 *
 * 4. This notice may not be removed or altered.
 */

#ifndef lint
static char copyright[] =
"@@(#) Copyright 1994 Purdue Research Foundation.\nAll rights reserved.\n";
static char *rcsid = "$Id: dnode1.c,v 1.10 2005/05/11 12:56:47 abe Exp abe $";
#endif


#if	defined(HASVXFS)

# if	defined(HPUXKERNBITS) && HPUXKERNBITS>=64
#define _INO_T
typedef int ino_t;
#define _TIME_T
typedef int time_t;
# endif	/* defined(HPUXKERNBITS) && HPUXKERNBITS>=64 */

#include "lsof.h"


/*
 * HP-UX versions below 10.20:
 *
 *    The pool_id_t type does not seem to be defined in the header  files
 *    distributed by HP.  However, <sys/fs/vx_hpux.h> requires  it when
 *    _KERNEL is defined.  So we fake the pool_id_t definition.
 *
 *    <sys/fs/vx_hpux.h> also requires sv_sema_t.  It's defined in
 *    <sys/sem_alpha.h> when _KERNEL is defined, but some other header file has
 *    already included <sys/sem_alpha.h> with _KERNEL undefined.  So we fake the
 *    sv_sema_t definition.
 *
 * HP-UX version 10.20 and above:
 *
 *    The pool_id_t type is used by other header files for other purposes.
 *    Redefine it for VXFS.  Delete some other conflicting definitions.
 *    Don't #define _KERNEL.  Include a different set of VXFS header files.
 */


# if	HPUXV>=1020
#undef	te_offset
#undef	i_size
#undef	di_size
#define	pool_id_t	vx_pool_id_t

#  if	HPUXV>=1030
#define	ulong	vx_ulong		/* avoid <sys/stream.h> conflict */
#  endif	/* HPUXV>=1030 */

#include <sys/fs/vx_hpux.h>
#include <sys/fs/vx_port.h>
#include <sys/fs/vx_inode.h>

#  if	HPUXV>=1030
#undef	ulong
#  endif	/* HPUXV>=1030 */

# else	/* HPUXV<1020 */

#define	pool_id_t	caddr_t
#define	sv_sema_t	caddr_t
#define	_KERNEL
#include <sys/fs/vx_hpux.h>
#include <sys/fs/vx_inode.h>
#undef	_KERNEL
# endif	/* HPUXV>=1020 */


/*
 * read_vxnode() - read Veritas file system inode information
 */

int
read_vxnode(v, vfs, dev, devs, rdev, rdevs)
	struct vnode *v;		/* local containing vnode */
	struct l_vfs *vfs;		/* local vfs structure */
	dev_t *dev;			/* device number receiver */
	int *devs;			/* device status receiver */
	dev_t *rdev;			/* raw device number receiver */
	int *rdevs;			/* raw device status receiver */
{
	struct vx_inode i;

	if (!v->v_data || kread((KA_T)v->v_data, (char *)&i, sizeof(i)))
	    return(1);
/*
 * Return device numbers.
 */
	if (vfs && vfs->fsname)
	    *dev = vfs->dev;
	else
	    *dev = i.i_dev;
	*devs = 1;
	if ((v->v_type == VCHR) || (v->v_type == VBLK)) {
	    *rdev = v->v_rdev;
	    *rdevs = 1;
	}
/*
 * Record inode number.
 */
	Lf->inode = (INODETYPE)i.i_number;
	Lf->inp_ty = 1;
/*
 * Record size.
 */
	if (Foffset || ((v->v_type == VCHR || v->v_type == VBLK) && !Fsize))
	    Lf->off_def = 1;
	else {
	    Lf->sz = (SZOFFTYPE)i.i_size;
	    Lf->sz_def = 1;
	}
/*
 * Record link count.
 */
	if (Fnlink) {
	    Lf->nlink = (long)i.i_nlink;
	    Lf->nlink_def = 1;
	    if (Nlink && (Lf->nlink < Nlink))
		Lf->sf |= SELNLINK;
	}
	return(0);
}
#endif	/* defined(HASVXFS) */
@


1.10
log
@Revision 4.75
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.9 2001/06/19 13:30:18 abe Exp abe $";
d135 1
a135 1
	Lf->inode = (unsigned long)i.i_number;
@


1.9
log
@Revision 4.57
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.8 2000/12/04 14:26:14 abe Exp abe $";
a85 4

#   if	defined(HASONLINEJFS)
#include "vx_inode.h"
#   else	/* !defined(HASONLINEJFS) */
a86 1
#   endif	/* defined(HASONLINEJFS) */
@


1.8
log
@Revision 4.53
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.7 1999/05/04 08:58:52 abe Exp abe $";
d86 4
d91 1
@


1.7
log
@Revision 4.43
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.6 99/04/27 15:54:09 abe Exp Locker: abe $";
d108 1
a108 1
read_vxnode(v, vfs, dev)
d112 3
d121 1
a121 1
 * Return device number.
d123 1
a123 3
	if (v->v_type == VCHR || v->v_type == VBLK)
	    *dev = v->v_rdev;
	else if (vfs && vfs->fsname)
d127 5
@


1.6
log
@Revision 4.43
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.5 98/08/18 08:08:46 abe Exp Locker: abe $";
d139 9
@


1.5
log
@Revision 4.37
@
text
@d2 1
a2 1
 * dnode1.c - HP-UX node functions for lsof
d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.4 98/07/17 08:54:52 abe Exp Locker: abe $";
@


1.4
log
@Revision 4.35
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.3 98/03/06 08:21:28 abe Exp Locker: abe $";
d134 3
a136 1
	if (!Foffset) {
@


1.3
log
@Revision 4.27
Add HP-UX 11 support, etc.
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.2 97/10/23 12:23:46 abe Exp Locker: abe $";
d42 9
d53 1
a53 1
#if	defined(HASVXFS)
d80 1
a80 1
# if	HPUXV>=1030
d82 1
a82 1
# endif	/* HPUXV>=1030 */
d88 1
a88 1
# if	HPUXV>=1030
d90 1
a90 1
# endif	/* HPUXV>=1030 */
@


1.2
log
@Revision 4.18
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.1 97/02/24 07:33:51 abe Exp Locker: abe $";
d70 5
d78 5
d84 1
d91 1
a91 1
# endif	HPUXV>=1020
d100 1
a100 1
	struct vnode *v;		/* containing vnode */
d107 1
a107 1
		return(1);
d112 1
a112 1
		*dev = v->v_rdev;
d114 1
a114 1
		*dev = vfs->dev;
d116 1
a116 1
		*dev = i.i_dev;
d126 2
a127 2
		Lf->sz = (SZOFFTYPE)i.i_size;
		Lf->sz_def = 1;
@


1.1
log
@Initial revision
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.5 97/02/10 10:09:14 abe Exp $";
d115 1
a115 1
		Lf->sz = (unsigned long)i.i_size;
@
