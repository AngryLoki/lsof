head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2008.10.21.16.17.50;	author abe;	state Exp;
branches;
next	1.4;

1.4
date	2005.05.11.12.57.04;	author abe;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.17.21.58.08;	author abe;	state Exp;
branches;
next	1.2;

1.2
date	2000.05.24.11.43.14;	author abe;	state Exp;
branches;
next	1.1;

1.1
date	99.05.25.13.05.13;	author abe;	state Exp;
branches;
next	;


desc
@Pstat-based HP-UX lsof 
@


1.5
log
@Revision 4.81
@
text
@/*
 * dproto.h - pstat-based HP-UX function prototypes for lsof
 *
 * The _PROTOTYPE macro is defined in the common proto.h.
 */


/*
 * Copyright 1999 Purdue Research Foundation, West Lafayette, Indiana
 * 47907.  All rights reserved.
 *
 * Written by Victor A. Abell
 *
 * This software is not subject to any license of the American Telephone
 * and Telegraph Company or the Regents of the University of California.
 *
 * Permission is granted to anyone to use this software for any purpose on
 * any computer system, and to alter it and redistribute it freely, subject
 * to the following restrictions:
 *
 * 1. Neither the authors nor Purdue University are responsible for any
 *    consequences of the use of this software.
 *
 * 2. The origin of this software must not be misrepresented, either by
 *    explicit claim or by omission.  Credit to the authors and Purdue
 *    University must appear in documentation and sources.
 *
 * 3. Altered versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 *
 * 4. This notice may not be removed or altered.
 */


/*
 * $Id: dproto.h,v 1.4 2005/05/11 12:57:04 abe Exp abe $
 */


_PROTOTYPE(extern int get_max_fd,(void));
_PROTOTYPE(extern int is_file_named,(char *p, int cd));
_PROTOTYPE(extern void process_finfo,(struct pst_filedetails *pd, struct pst_fid *opfid, struct psfileid *psfid, KA_T na));
_PROTOTYPE(extern void process_socket,(struct pst_fileinfo2 *f,
				       struct pst_socket *s));
_PROTOTYPE(extern void process_stream,(struct pst_fileinfo2 *f, int ckscko));
_PROTOTYPE(extern KA_T read_det,(struct pst_fid *ki, uint32_t hf, uint32_t lf,
				 uint32_t hn, uint32_t ln,
				 struct pst_filedetails *pd));
_PROTOTYPE(extern struct pst_socket *read_sock,(struct pst_fileinfo2 *f));

#if	defined(HASIPv6)
_PROTOTYPE(extern struct hostent *gethostbyname2,(char *nm, int proto));
#endif	/* defined(HASIPv6) */

#if	defined(HASVXFS)
_PROTOTYPE(extern int read_vxnode,(struct vnode *v, struct l_vfs *vfs, dev_t *dev));
#endif	/* defined(HASVXFS) */

_PROTOTYPE(extern void scanmnttab,(void));
@


1.4
log
@Revision 4.75
@
text
@d36 1
a36 1
 * $Id: dproto.h,v 1.3 2004/10/17 21:58:08 abe Exp abe $
d45 1
a45 1
_PROTOTYPE(extern void process_stream,(struct pst_fileinfo2 *f));
@


1.3
log
@Revision 4.73
@
text
@d36 1
a36 1
 * $Id: dproto.h,v 1.2 2000/05/24 11:43:14 abe Exp abe $
d40 1
a41 1
_PROTOTYPE(extern int get_max_fd,(void));
d51 4
@


1.2
log
@Update for pstat.
@
text
@d36 1
a36 1
 * $Id: dproto.h,v 1.1 1999/05/25 13:05:13 abe Exp abe $
d54 2
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
 * $Id$
d42 8
a49 1
_PROTOTYPE(extern void process_finfo,(struct pst_status *p, struct pst_fileinfo *f));
@
