diff -ru lsof_4.74B.n+obsd.orig/Configure lsof_4.74B.n+obsd/Configure
--- lsof_4.74B.n+obsd.orig/Configure	2004-11-08 14:49:17.000000000 -0500
+++ lsof_4.74B.n+obsd/Configure	2004-11-25 00:32:52.000000000 -0500
@@ -2407,6 +2407,26 @@
 	LSOF_CFGF="$LSOF_CFGF -DHASPROCFS_PFSROOT"
       fi #	}
     fi	# }
+    if test -r ${LSOF_INCLUDE}/sys/bufq.h	# {
+    then
+      LSOF_CFGF="$LSOF_CFGF -DHASBUFQH"
+    else
+      if test -r ${NETBSD_SYS}/sys/bufq.h	# {
+      then
+	LSOF_CFGF="$LSOF_CFGF -DHASBUFQH"
+	LSOF_TMP1=1
+      fi	# }
+    fi	# }
+    if test -r ${LSOF_INCLUDE}/fs/ptyfs/ptyfs.h	# {
+    then
+      LSOF_CFGF="$LSOF_CFGF -DHASPTYFS"
+    else
+      if test -r ${NETBSD_SYS}/fs/ptyfs/ptyfs.h	# {
+      then
+	LSOF_CFGF="$LSOF_CFGF -DHASPTYFS"
+	LSOF_TMP1=1
+      fi	# }
+    fi	# }
     if test -d ${NETBSD_SYS}/isofs/cd9660	# {
     then
       LSOF_CFGF="$LSOF_CFGF -DHAS9660FS=1"
diff -ru lsof_4.74B.n+obsd.orig/dialects/n+obsd/dlsof.h lsof_4.74B.n+obsd/dialects/n+obsd/dlsof.h
--- lsof_4.74B.n+obsd.orig/dialects/n+obsd/dlsof.h	2004-11-08 14:49:20.000000000 -0500
+++ lsof_4.74B.n+obsd/dialects/n+obsd/dlsof.h	2004-11-25 00:33:26.000000000 -0500
@@ -245,11 +245,13 @@
 #undef	DIRENT_DIRBLKSIZ
 # endif	/*defined(DIRENT_BLKSIZ) */
 
+# if	defined(HASBUFQ)
 # if	defined(NETBSDV) && NETBSDV>=2099010
 #define	_KERNEL
 #include <sys/bufq.h>
 #undef	_KERNEL
 # endif	/* defined(NETBSDV) && NETBSDV>=2099010 */
+# endif /* defined(HASBUFQ) */
 
 #undef KERNEL
 #include <ufs/mfs/mfsnode.h>
@@ -363,10 +365,20 @@
 #define	Pstatus		PFSstatus
 #define	Pnote		PFSnote
 #define	Pnotepg		PFSnotepg
+#define	Pfd		PFSfd
+#define	Pmap		PFSmap
+#define	Pmaps		PFSmaps
 #  endif	/* defined(HASPROCFS_PFSROOT) */
 #include <machine/reg.h>
 # endif	/* defined(HASPROCFS) */
 
+#if	defined(HASPTYFS)
+#define _KERNEL
+#include <fs/ptyfs/ptyfs.h>
+#include <miscfs/specfs/specdev.h>
+#undef _KERNEL
+#endif /* defined(HASPTYFS) */
+
 #define	KERNEL
 #define _KERNEL
 #include <sys/file.h>
diff -ru lsof_4.74B.n+obsd.orig/dialects/n+obsd/dnode.c lsof_4.74B.n+obsd/dialects/n+obsd/dnode.c
--- lsof_4.74B.n+obsd.orig/dialects/n+obsd/dnode.c	2004-11-08 14:49:20.000000000 -0500
+++ lsof_4.74B.n+obsd/dialects/n+obsd/dnode.c	2004-11-25 00:35:18.000000000 -0500
@@ -188,7 +188,7 @@
 	struct mfsnode m;
 	struct nfsnode n;
 	enum nodetype {NONODE, CDFSNODE, DOSNODE, EXT2NODE, FDESCNODE, INODE,
-		KERNFSNODE, MFSNODE, NFSNODE, PFSNODE} nty;
+		KERNFSNODE, MFSNODE, NFSNODE, PFSNODE, PTYNODE} nty;
 	enum vtype type;
 	struct vnode *v, vb;
 	struct l_vfs *vfs;
@@ -262,6 +262,10 @@
 	size_t sz;
 #endif	/* defined(HASPROCFS) */
 
+#if	defined(HASPTYFS)
+	struct ptyfsnode pt;
+#endif	/* defined(HASPTYFS) */
+
 #if	defined(HASNULLFS)
 
 process_overlaid_node:
@@ -523,6 +527,19 @@
 	    break;
 #endif	/* defined(HASPROCFS) */
 
+#if	defined(HASPTYFS)
+	case VT_PTYFS:
+	    if (!v->v_data
+	    ||  kread((KA_T)v->v_data, (char *)&pt, sizeof(pt))) {
+		(void) snpf(Namech, Namechl, "can't read ptyfsnode at: %s",
+		    print_kptr((KA_T)v->v_data, (char *)NULL, 0));
+		enter_nm(Namech);
+		return;
+	    }
+	    nty = PTYNODE;
+	    break;
+#endif	/* defined(HASPTYFS) */
+
 #if	defined(HASEXT2FS)
 	case VT_EXT2FS:
 #endif	/* defined(HASEXT2FS) */
@@ -769,6 +786,24 @@
 	case NFSNODE:
 	    dev = NVATTR.va_fsid;
 	    devs = 1;
+	    break;
+
+#if	defined(HASPTYFS)
+	case PTYNODE: {
+	    struct specinfo si;
+	    if (v->v_un.vu_specinfo
+	    &&  !kread((KA_T)v->v_un.vu_specinfo, (char *)&si, sizeof(si))) {
+		rdev = si.si_rdev;
+		rdevs = 1;
+	    }
+	    if (vfs) {
+		dev = (dev_t)vfs->fsid.__fsid_val[0];
+		devs = 1;
+	    }
+	    break;
+	}
+#endif	/* defined(HASPTYFS) */
+
 	}
 /*
  * Obtain the inode number.
@@ -836,6 +871,13 @@
 	    break;
 #endif	/* defined(HASPROCFS) */
 
+#if	defined(HASPTYFS)
+	case PTYNODE:
+	    Lf->inode = (unsigned long)pt.ptyfs_fileno;
+	    Lf->inp_ty = 1;
+	    break;
+#endif	/* defined(HASPTYFS) */
+
 	}
 
 /*
@@ -1153,6 +1195,7 @@
  *	/kern files
  *	memory node files;
  *	/proc files.
+ *	ptyfs files
  */
 
 	if (type == VBAD)
@@ -1222,6 +1265,47 @@
 		(void) snpf(ep, sz, "/%d/notepg", p.pfs_pid);
 		ty = "PGID";
 		break;
+	    case Pfd:
+		ep = endnm(&sz);
+		(void) snpf(ep, sz, "/%d/fd", p.pfs_pid);
+		ty = "PFD";
+		break;
+	    case Pmap:
+		ep = endnm(&sz);
+		(void) snpf(ep, sz, "/%d/map", p.pfs_pid);
+		ty = "PMAP";
+		break;
+	    case Pmaps:
+		ep = endnm(&sz);
+		(void) snpf(ep, sz, "/%d/maps", p.pfs_pid);
+		ty = "PMPS";
+		break;
+	    }
+	    if (ty)
+		(void) snpf(Lf->type, sizeof(Lf->type), ty);
+	    if (Namech[0])
+		enter_nm(Namech);
+	}
+#endif	/* defined(HASPROCFS) */
+
+#if	defined(HASPTYFS)
+	else if (nty == PTYNODE) {
+	    (void) snpf(Namech, Namechl, "%s", Lf->fsdir);
+	    Lf->nlink = 1;
+	    Lf->nlink_def = 1;
+	    switch (pt.ptyfs_type) {
+	    case PTYFSpts:
+		ep = endnm(&sz);
+		(void) snpf(ep, sz, "/%lu", (unsigned long)pt.ptyfs_pty);
+		break;
+	    case PTYFSptc:
+		ep = endnm(&sz);
+		(void) snpf(ep, sz, "/%lu (master)", (unsigned long)pt.ptyfs_pty);
+		break;
+	    case PTYFSroot:
+		Lf->sz = 512;
+		Lf->sz_def = 1;
+		break;
 	    }
 	    if (ty)
 		(void) snpf(Lf->type, sizeof(Lf->type), ty);
