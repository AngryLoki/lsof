head	1.38;
access;
symbols;
locks; strict;
comment	@ * @;


1.38
date	2006.03.28.21.54.08;	author abe;	state Exp;
branches;
next	1.37;

1.37
date	2005.08.08.19.53.24;	author abe;	state Exp;
branches;
next	1.36;

1.36
date	2005.05.11.12.53.54;	author abe;	state Exp;
branches;
next	1.35;

1.35
date	2004.12.30.18.42.24;	author abe;	state Exp;
branches;
next	1.34;

1.34
date	2004.03.10.23.51.34;	author abe;	state Exp;
branches;
next	1.33;

1.33
date	2003.10.15.20.22.39;	author abe;	state Exp;
branches;
next	1.32;

1.32
date	2003.10.13.13.29.20;	author abe;	state Exp;
branches;
next	1.31;

1.31
date	2003.10.07.14.34.14;	author abe;	state Exp;
branches;
next	1.30;

1.30
date	2003.06.11.11.44.50;	author abe;	state Exp;
branches;
next	1.29;

1.29
date	2003.03.23.19.50.53;	author abe;	state Exp;
branches;
next	1.28;

1.28
date	2003.03.21.17.42.56;	author abe;	state Exp;
branches;
next	1.27;

1.27
date	2002.10.08.20.21.52;	author abe;	state Exp;
branches;
next	1.26;

1.26
date	2002.06.17.01.44.11;	author abe;	state Exp;
branches;
next	1.25;

1.25
date	2002.04.19.20.53.24;	author abe;	state Exp;
branches;
next	1.24;

1.24
date	2002.02.26.15.20.45;	author abe;	state Exp;
branches;
next	1.23;

1.23
date	2002.01.14.15.55.45;	author abe;	state Exp;
branches;
next	1.22;

1.22
date	2001.02.13.14.16.01;	author abe;	state Exp;
branches;
next	1.21;

1.21
date	2001.01.16.12.17.30;	author abe;	state Exp;
branches;
next	1.20;

1.20
date	2000.12.04.14.32.08;	author abe;	state Exp;
branches;
next	1.19;

1.19
date	2000.08.21.11.58.38;	author abe;	state Exp;
branches;
next	1.18;

1.18
date	2000.08.01.12.44.26;	author abe;	state Exp;
branches;
next	1.17;

1.17
date	2000.06.22.12.55.23;	author abe;	state Exp;
branches;
next	1.16;

1.16
date	2000.03.14.20.37.26;	author abe;	state Exp;
branches;
next	1.15;

1.15
date	99.10.22.08.22.32;	author abe;	state Exp;
branches;
next	1.14;

1.14
date	99.10.13.09.14.45;	author abe;	state Exp;
branches;
next	1.13;

1.13
date	99.07.19.14.02.32;	author abe;	state Exp;
branches;
next	1.12;

1.12
date	99.03.29.07.15.02;	author abe;	state Exp;
branches;
next	1.11;

1.11
date	99.02.27.15.10.45;	author abe;	state Exp;
branches;
next	1.10;

1.10
date	98.05.22.07.18.22;	author abe;	state Exp;
branches;
next	1.9;

1.9
date	98.04.29.13.40.20;	author abe;	state Exp;
branches;
next	1.8;

1.8
date	98.03.06.08.24.36;	author abe;	state Exp;
branches;
next	1.7;

1.7
date	98.02.13.12.43.48;	author abe;	state Exp;
branches;
next	1.6;

1.6
date	97.12.11.16.00.04;	author abe;	state Exp;
branches;
next	1.5;

1.5
date	97.08.15.08.22.16;	author abe;	state Exp;
branches;
next	1.4;

1.4
date	97.07.02.11.12.26;	author abe;	state Exp;
branches;
next	1.3;

1.3
date	97.05.30.16.29.43;	author abe;	state Exp;
branches;
next	1.2;

1.2
date	97.04.29.10.02.48;	author abe;	state Exp;
branches;
next	1.1;

1.1
date	97.02.24.07.36.04;	author abe;	state Exp;
branches;
next	;


desc
@Lsof version 4
@


1.38
log
@Revision 4.77
@
text
@/*
 * dlsof.h - NetBSD and OpenBSD header file for lsof
 */


/*
 * Copyright 1994 Purdue Research Foundation, West Lafayette, Indiana
 * 47907.  All rights reserved.
 *
 * Written by Victor A. Abell
 *
 * This software is not subject to any license of the American Telephone
 * and Telegraph Company or the Regents of the University of California.
 *
 * Permission is granted to anyone to use this software for any purpose on
 * any computer system, and to alter it and redistribute it freely, subject
 * to the following restrictions:
 *
 * 1. Neither the authors nor Purdue University are responsible for any
 *    consequences of the use of this software.
 *
 * 2. The origin of this software must not be misrepresented, either by
 *    explicit claim or by omission.  Credit to the authors and Purdue
 *    University must appear in documentation and sources.
 *
 * 3. Altered versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 *
 * 4. This notice may not be removed or altered.
 */


/*
 * $Id: dlsof.h,v 1.37 2005/08/08 19:53:24 abe Exp abe $
 */


#if	!defined(NETBSD_LSOF_H)
#define	NETBSD_LSOF_H	1

#include <stdlib.h>
#include <dirent.h>
#include <nlist.h>
#include <paths.h>
#include <setjmp.h>
#include <signal.h>
#include <string.h>
#include <unistd.h>

# if	defined(HASGETBOOTFILE)
#include <util.h>
# endif	/* defined(HASGETBOOTFILE) */

#include <sys/filedesc.h>
#include <sys/mbuf.h>
  
# if	defined(HAS_LWP_H)
#include <sys/lwp.h>
# endif	/* defined(HAS_LWP_H) */

# if	(defined(OPENBSDV) && OPENBSDV>=3030) \
  ||	(defined(NETBSDV) && __NetBSD_Version__>=106060000)

#  if	defined(OPENBSDV) ||  __NetBSD_Version__<399001100
#define	_KERNEL
#  endif	/* defined(OPENBSDV) ||  __NetBSD_Version__<399001100 */

#  if	defined(NETBSDV) && __NetBSD_Version__<399001100
struct buf;	/* dummy for function prototype in <sys/buf.h> */
struct uio;	/* dummy for function prototype in <sys/buf.h> */
#  endif	/* defined(NETBSDV && __NetBSD_Version__<399001100) */

#include <sys/ucred.h>
# endif	/* (defined(OPENBSDV) && OPENBSDV>=3030)
	   || (defined(NETBSDV) && __NetBSD_Version__>=106060000) */

# if	defined(NETBSDV) && __NetBSD_Version__<399001100
#include <sys/buf.h>
# endif	/* defined(NETBSDV) && __NetBSD_Version__<399001100 */

# if	(defined(OPENBSDV) && OPENBSDV>=3030) \
  ||	(defined(NETBSDV) && __NetBSD_Version__>=106060000 \
  &&	__NetBSD_Version__<399001100)
#undef	_KERNEL
# endif	/* (defined(OPENBSDV) && OPENBSDV>=3030) \
	   || (defined(NETBSDV) && __NetBSD_Version__>=106060000 \
	   &&  __NetBSD_Version__<399001100) */

#define	NFS
#define m_stat	mnt_stat

# if	(defined(OPENBSDV) && OPENBSDV>=3030) \
  ||	(defined(NETBSDV) && __NetBSD_Version__>=106060000)
#define	_KERNEL
# endif	/* (defined(OPENBSDV) && OPENBSDV<3030)
	   || (defined(NETBSDV) && __NetBSD_Version__>=106060000) */

#include <sys/mount.h>

# if	(defined(OPENBSDV) && OPENBSDV>=3030) \
  ||	(defined(NETBSDV) && __NetBSD_Version__>=106060000)
#undef	_KERNEL
# endif	/* (defined(OPENBSDV) && OPENBSDV>=3030)
	   || (defined(NETBSDV) && __NetBSD_Version__>=106060000) */

#include <rpc/types.h>
#include <sys/protosw.h>

# if	defined(NETBSDV) && NETBSDV>=1003000
#define	sockproto	NETBSD_sockproto
# endif	/* defined(NETBSDV) && NETBSDV>=1003000 */

#include <sys/socket.h>

# if	defined(HASMSDOSFS)
#  if	HASMSDOSFS==1
#include <msdosfs/bpb.h>
#include <msdosfs/fat.h>
#  else	/* HASMSDOSFS!=1 */
#include <fs/msdosfs/bpb.h>
#include <fs/msdosfs/fat.h>
#  endif	/* HASMSDOSFS==1 */

#  if	(defined(OPENBSDV) && OPENBSDV<3030) \
   ||	(defined(NETBSDV) && __NetBSD_Version__<106060000)
/*
 * The netcred and netexport structures may be needed in the msdosfsmount
 * structure, defined in <msdosfs/msdosfsmount.h>.  So as a terrible hack,
 * the lsof Configure script extracts the netcred and netexport structure
 * definitions from <sys/mount.h> and places them in "netexport.h".
 *
 * When needed, the netcred and netexport structures netcred should really
 * be obtained from <sys/mount.h>.  However they are hidden in <sys/mount.h>
 * under _KERNEL, and that sometimes can't be defined when including
 * <sys/mount.h> without causing other seemingly insurmountable #include
 * problems.
 *
 * THIS IS A TERRIBLE AND FRAGILE HACK!!!  It might break if the netexport or
 * netcred definitions change radically in <sys/mount.h>.
 *
 * It is no longer needed for NetBSD Versions 1.6F and above, or for OpenBSD
 * versions 3.3 and above.
 */

#include "netexport.h"
#  endif	/* (defined(OPENBSDV) && OPENBSDV<3030)
		   || (defined(NETBSDV) && __NetBSD_Version__<106060000) */

#define	_KERNEL
struct nameidata;	/* to satisfy a function prototype in msdosfsmount.h */
#include <msdosfs/msdosfsmount.h>
#undef	_KERNEL
#include <msdosfs/direntry.h>
#include <msdosfs/denode.h>
# endif	/* defined(HASMSDOSFS) */

# if	defined(NETBSDV) && NETBSDV>=1003000
#undef	sockproto
# endif	/* defined(NETBSDV) && NETBSDV>=1003000 */

#include <sys/socketvar.h>
#include <sys/un.h>
#include <sys/unpcb.h>
#include <netinet/in.h>
#include <netinet/in_systm.h>
#include <netinet/ip.h>

# if	defined(HASIPv6) && defined(NETBSDV) && !defined(HASINRIAIPv6)
#include <netinet/ip6.h>
#include <netinet6/in6_pcb.h>
# endif	/* defined(HASIPv6) && defined(NETBSDV) && !defined(HASINRIAIPv6) */

#include <net/route.h>
#include <netinet/in_pcb.h>
#include <netinet/ip_var.h>
#include <netinet/tcp.h>
#include <netinet/tcpip.h>
#include <netinet/tcp_fsm.h>
#include <netinet/tcp_timer.h>
#include <netinet/tcp_var.h>

# if	defined(OPENBSDV)
#  if	!defined(TF_ECN_PERMIT)
#define	TF_ECN_PERMIT	0x00008000	/* other side said I could ECN */
#  endif	/* !defined(TF_ECN_PERMIT) */

#  if	!defined(TF_RCVD_CE)
#define	TF_RCVD_CE	0x00010000	/* send ECE in subsequent segs */ 
#  endif	/* !defined(TF_RCVD_CE) */

#  if	!defined(TF_SEND_CWR)
#define	TF_SEND_CWR	0x00020000	/* send CWR in next seg */
#  endif	/* !defined(TF_SEND_CWR) */

#  if	!defined(TF_DISABLE_ECN)
#define	TF_DISABLE_ECN	0x00040000	/* disable ECN for this connection */
#  endif	/* !defined(TF_DISABLE_ECN) */

# endif	/* defined(OPENBSDV) */

#include <sys/ucred.h>

# if	defined(UVM)
/*
 * Avoid conflicts with definitions in <vm/vm_param.h>.
 */

#undef	FALSE
#undef	TRUE
# endif	/* defined(UVM) */

#include <sys/vnode.h>

# if	defined(NETBSDV) && NETBSDV>=1003000
/*
 * Because late in the 1.3I NetBSD development cycle the sockproto structure
 * was placed under _KERNEL in <sys/socket.h>, and because defining _KERNEL
 * before #include'ing <sys/socket.h> causes other #include problems, the
 * sockproto structure definition that might have been in <sys/socket.h> is
 * renamed NETBSD_sockproto, and the following definition is used instead.
 *
 * Ugly, isn't it?
 */

struct sockproto {
	u_short sp_family;
	u_short sp_protocol;
};
# endif	/* defined(NETBSDV) && NETBSDV>=1003000 */

#include <net/raw_cb.h>
#include <sys/domain.h>
#define	pmap	RPC_pmap
#include <rpc/rpc.h>
#include <rpc/pmap_prot.h>
#undef 	pmap
#define KERNEL
#include <ufs/ufs/quota.h>
# if	defined(DIRBLKSIZ)
#define	DIRENT_DIRBLKSIZ	DIRBLKSIZ
#undef	DIRBLKSIZ
# endif	/* defined(DIRBLKSIZ) */

# if	defined(HASI_FFS1)
#define	_KERNEL
#include <ufs/ufs/ufsmount.h>
#undef	_KERNEL
# endif	/* defined(HASI_FFS1) */

#include <ufs/ufs/inode.h>

# if	defined(DIRENT_BLKSIZ)
#define	DIRBLKSIZ	DIRENT_DIRBLKSIZ
#undef	DIRENT_DIRBLKSIZ
# endif	/*defined(DIRENT_BLKSIZ) */

# if	defined(HASBUFQ_H)
#  if	defined(NETBSDV) && NETBSDV>=2099010
#define	_KERNEL
#include <sys/bufq.h>
#undef	_KERNEL
#  endif	/* defined(NETBSDV) && NETBSDV>=2099010 */
#endif	/* defined(HASBUFQ_H) */

#undef KERNEL
#include <ufs/mfs/mfsnode.h>

# if	defined(HASNFSPROTO)
#include <nfs/rpcv2.h>
#include <nfs/nfsproto.h>
# else	/* !defined(HASNFSPROTO) */
#include <nfs/nfsv2.h>
# endif	/* defined(HASNFSPROTO) */

#include <nfs/nfs.h>
#include <nfs/nfsnode.h>
#include <sys/proc.h>
#include <kvm.h>
#include <sys/sysctl.h>
#  if	defined(HASKVMGETPROC2)
#define	P_ADDR		p_paddr
#define	P_COMM		p_comm
#define	P_CWDI		p_cwdi
#define	P_FD		p_fd
#define	P_PID		p_pid
#define	P_PGID		p__pgid
#define	P_PPID		p_ppid
#define	P_STAT		p_stat
#define	P_TRACEP	p_tracep
#define	P_UID		p_uid
#define	P_VMSPACE	p_vmspace
#  else	/* !defined(HASKVMGETPROC2) */
#define	P_ADDR		kp_eproc.e_paddr
#define	P_COMM		kp_proc.p_comm
#define	P_CWDI		kp_proc.p_cwdi
#define	P_FD		kp_proc.p_fd
#define	P_PID		kp_proc.p_pid
#define	P_PGID		kp_eproc.e_pgid
#define	P_PPID		kp_eproc.e_ppid
#define	P_STAT		kp_proc.p_stat
#define	P_TRACEP	kp_proc.p_tracep
#define	P_UID		kp_eproc.e_ucred.cr_uid
#define	P_VMSPACE	kp_proc.p_vmspace
#  endif	/* defined(HASKVMGETPROC2) */

# if	defined(HASFDESCFS)
#define	_KERNEL
#include <miscfs/fdesc/fdesc.h>
#undef	_KERNEL
# endif	/* defined(HASFDESCFS) */

# if	defined(HASKERNFS)
#define	_KERNEL
#define	Pkern		__Pkern
#define	Proot		__Proot
#define	Pnull		__Pnull
#define	Ptime		__Ptime
#define	Pint		__Pint
#define	Pstring		__Pstring
#define	Phostname	__Phostname
#define	Pavenrun	__Pavenrun
#define	Pdevice		__Pdevice
#define	Pmsgbuf		__Pmsgbuf
#define	Pipsecsadir	__Pipsecsadir
#define	Pipsecspdir	__Pipsecspdir
#define	Pipsecsa	__Pipseca
#define	Pipsecsp	__Pipsecsp
#include <miscfs/kernfs/kernfs.h>
#undef	_KERNEL
#undef	Pkern
#undef	Proot
#undef	Pnull
#undef	Ptime
#undef	Pint
#undef	Pstring
#undef	Phostname
#undef	Pavenrun
#undef	Pdevice
#undef	Pmsgbuf
#undef	Pipsecsadir
#undef	Pipsecspdir
#undef	Pipseca
#undef	Pipsecsp
#  if	defined(HASKERNFS_KFS_KT)
#define	kf_kt	kfs_kt
#  endif	/* defined(HASKERNFS_KFS_KT) */
# endif	/* defined(HASKERNFS) */

# if	defined(HASNULLFS)
#define	_KERNEL
#  if	defined(NETBSDV) && NETBSDV>=1005000 && __NetBSD_Version__<106060000
#include "netexport.h"
#  endif	/* defined(NETBSDV) && NETBSDV>=1005000
		   && __NetBSD_Version__<106060000 */
#include <miscfs/nullfs/null.h>
#undef	_KERNEL
# endif	/* defined(HASNULLFS) */

# if	defined(HASPROCFS)
#  if	defined(HASPROCFS_PFSROOT)
#define	_KERNEL
#  endif	/* defined(HASPROCFS_PFSROOT) */
#include <miscfs/procfs/procfs.h>
#  if	defined(HASPROCFS_PFSROOT)
#undef	_KERNEL
#define	Proot		PFSroot
#define	Pproc		PFSproc
#define	Pcurproc	PFScurproc
#define	Pmem		PFSmem
#define	Pregs		PFSregs
#define	Pfile		PFSfile
#define	Pfpregs		PFSfpregs
#define	Pctl		PFSctl
#define	Pstatus		PFSstatus
#define	Pnote		PFSnote
#define	Pnotepg		PFSnotepg
#   if	defined(NetBSDV)
#    if	NETBSDV>=2000000
#define	Pfd		PFSfd
#    endif	/* NETBSDV>=2000000 */
#    if	NETBSDV>=1006000
#define	Pmap		PFSmap
#define	Pmaps		PFSmaps
#    endif	/* NETBSDV>=1006000 */
#   endif	/* defined(NetBSDV) */
#  endif	/* defined(HASPROCFS_PFSROOT) */
#include <machine/reg.h>
# endif	/* defined(HASPROCFS) */

# if	defined(HASPTYFS)
#define	_KERNEL
#include <fs/ptyfs/ptyfs.h>
#include <miscfs/specfs/specdev.h>
#undef	_KERNEL
# endif	/* defined(HASPTYFS) */

#define	KERNEL
#define _KERNEL
#include <sys/file.h>
#include <sys/fcntl.h>

# if	defined(HAS_ADVLOCK_ARGS)
struct vop_advlock_args;
# endif	/* defined(HAS_ADVLOCK_ARGS) */

# if	defined(DTYPE_KQUEUE)
#define	HASKQUEUE				/* has the kqueue file type */
#  if	defined(OPENBSDV)
#include <sys/eventvar.h>
#  endif	/* defined(OPENBSDV) */
# endif	/* defined(DTYPE_KQUEUE) */

#include <sys/lockf.h>
#undef	KERNEL
#undef	_KERNEL

# if	defined(UVM)
#  if	defined(OPENBSDV)
#define	_UVM_UVM_FAULT_I_H_	1		/* avoid OpenBSD's
						/* <uvm/uvm_fault_i.h */
#  endif	/* defined(OPENBSDV) */
#define	FALSE	0
#define	TRUE	1
#include <uvm/uvm.h>
# endif	/* defined(UVM) */

# if	defined(HAS_UVM_INCL)
#include <uvm/uvm.h>
#include <uvm/uvm_map.h>
#include <uvm/uvm_object.h>
#include <uvm/uvm_pager.h>
# else	/* !defined(HAS_UVM_INCL) */
#include <vm/vm.h>
#include <vm/vm_map.h>
#include <vm/vm_object.h>
#include <vm/vm_pager.h>
# endif	/* defined(HAS_UVM_INCL) */

# if	defined(HAS_SYS_PIPEH)
#  if	OPENBSDV==2030 && defined(__sparc__)
#   if	defined(nbpg)
#undef	nbpg
#   endif	/* defined(nbpg) */
#define	nbpg	4096		/* WARNING!!!  This should be 8192 for sun4,
				 * but there's not much chance this value will
				 * ever be used by any lsof code.  (See the
				 * use of PIPE_NODIRECT in <sys/pipe.h>. */
#  endif	/* OPENBSDV==2030 && defined(__sparc__) */
#include <sys/pipe.h>
#endif	/* defined(HAS_SYS_PIPEH) */

#define	COMP_P		const void
#define DEVINCR		1024	/* device table malloc() increment */
typedef	u_long		KA_T;
#define	KMEM		"/dev/kmem"
#define MALLOC_P	void
#define FREE_P		MALLOC_P
#define MALLOC_S	size_t

# if	!defined(MAXSYSCMDL)
#define	MAXSYSCMDL	MAXCOMLEN	/* max system command name length */
# endif	/* !defined(MAXSYSCMDL) */

# if	defined(N_UNIXV)
#define	N_UNIX_TMP(x)	#x
#define	N_UNIX_STR(x)	N_UNIX_TMP(x)
#define	N_UNIX		N_UNIX_STR(N_UNIXV)
# endif	/* defined(N_UNIXV) */

#define QSORT_P		void
#define	READLEN_T	int
#define STRNCPY_L	size_t
#define SWAP		"/dev/drum"
#define	SZOFFTYPE	unsigned long long
					/* size and offset internal storage
					 * type */
#define	SZOFFPSPEC	"ll"		/* SZOFFTYPE print specification
					 * modifier */


/*
 * Global storage definitions (including their structure definitions)
 */

extern struct file *Cfp;
extern kvm_t *Kd;
extern KA_T Kpa;

struct l_vfs {
	KA_T addr;			/* kernel address */
	fsid_t	fsid;			/* file system ID */
	char type[MFSNAMELEN];		/* type of file system */
	char *dir;			/* mounted directory */
	char *fsname;			/* file system name */
	struct l_vfs *next;		/* forward link */
};
extern struct l_vfs *Lvfs;

struct mounts {
        char *dir;              	/* directory (mounted on) */
	char *fsname;           	/* file system
					 * (symbolic links unresolved) */
	char *fsnmres;           	/* file system
					 * (symbolic links resolved) */
        dev_t dev;              	/* directory st_dev */
	dev_t rdev;			/* directory st_rdev */
	INODETYPE inode;		/* directory st_ino */
	mode_t mode;			/* directory st_mode */
	mode_t fs_mode;			/* file_system st_mode */
        struct mounts *next;    	/* forward link */
};

#define	X_NCACHE	"ncache"
#define	X_NCSIZE	"ncsize"
#define	NL_NAME		n_name

extern int Np;				/* number of kernel processes */

# if	defined(HASKVMGETPROC2) 
struct kinfo_proc2 *P;			/* local process table copy */
# else	/* ! defined(HASKVMGETPROC2) */
struct kinfo_proc *P;			/* local process table copy */
# endif	/* defined(HASKVMGETPROC2) */

extern int pgshift;			/* kernel's page shift */

struct sfile {
	char *aname;			/* argument file name */
	char *name;			/* file name (after readlink()) */
	char *devnm;			/* device name (optional) */
	dev_t dev;			/* device */
	dev_t rdev;			/* raw device */
	u_short mode;			/* S_IFMT mode bits from stat() */
	int type;			/* file type: 0 = file system
				 	 *	      1 = regular file */
	INODETYPE i;			/* inode number */
	int f;				/* file found flag */
	struct sfile *next;		/* forward link */

};


/*
 * Definitions for rdev.c
 */

#define	DIRTYPE	dirent
#define HASDNAMLEN	1	/* struct DIRTYPE has d_namlen element */


/*
 * Definitions for rnam.c and rnmh.c
 */

# if     defined(HASNCACHE)
#  if	(defined(OPENBSDV) && OPENBSDV>=2010) || (defined(NETBSDV) && NETBSDV>=1002000)
#include <stddef.h>
#endif	/* (defined(OPENBSDV) && OPENBSDV>=2010) || (defined(NETBSDV) && NETBSDV>=1002000) */

#include <sys/uio.h>
#include <sys/namei.h>
#define	NCACHE		namecache	/* kernel's structure name */
#define	NCACHE_NM	nc_name		/* name in NCACHE */
#define	NCACHE_NMLEN	nc_nlen		/* name length in NCACHE */
#define	NCACHE_NODEADDR	nc_vp		/* node address in NCACHE */
#define	NCACHE_PARADDR	nc_dvp		/* parent node address in NCACHE */

#  if	(defined(OPENBSDV) && OPENBSDV>=2010) || (defined(NETBSDV) && NETBSDV>=1002000)
#define	NCACHE_NXT	nc_hash.le_next	/* link in NCACHE */
#  else	/* (defined(OPENBSDV) && OPENBSDV>=2010) || (defined(NETBSDV) && NETBSDV>=1002000) */
#   if	defined(NetBSD1_0) && NetBSD<1994101
#define	NCACHE_NXT	nc_nxt		/* link in NCACHE */
#   else	/* !defined(NetBSD1_0) || NetBSD>=1994101 */
#define	NCACHE_NXT	nc_lru.tqe_next	/* link in NCACHE */
#   endif	/* defined(NetBSD1_0) && NetBSD<1994101 */
#  endif	/* (defined(OPENBSDV) && OPENBSDV>=2010) || (defined(NETBSDV) && NETBSDV>=1002000) */

#  if	defined(HASNCVPID)
#define	NCACHE_PARID	nc_dvpid	/* parent node ID in NCACHE */
#define	NCACHE_NODEID	nc_vpid		/* node ID in NCACHE */
#  endif	/* defined(HASNCVPID) */
# endif  /* defined(HASNCACHE) */

#endif	/* NETBSD_LSOF_H */
@


1.37
log
@Revision 4.76
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.36 2005/05/11 12:53:54 abe Exp abe $
d63 2
d66 3
a68 1
#  if	defined(NETBSDV)
d71 2
a72 1
#  endif	/* defined(NETBSDV) */
d77 1
a77 1
# if	defined(NETBSDV)
d79 1
a79 1
# endif	/* defined(NETBSDV) */
d82 2
a83 1
  ||	(defined(NETBSDV) && __NetBSD_Version__>=106060000)
d85 3
a87 2
# endif	/* (defined(OPENBSDV) && OPENBSDV>=3030)
		   || (defined(NETBSDV) && __NetBSD_Version__>=106060000) */
d127 4
a130 4
 * As a terrible hack, the lsof Configure script extracts the netcred and
 * netexport structure definitions from <sys/mount.h> and places them in
 * "netexport.h".  The netexport structure is needed in the msdosfsmount
 * structure, defined in <msdosfs/msdosfsmount.h>.
d132 5
a136 4
 * The netcred and netexport structures netcred should really be obtained
 * from <sys/mount.h>.  However they are hidden in <sys/mount.h> under _KERNEL,
 * and that can't be defined when including <sys/mount.h> without causing other
 * seemingly insurmountable #include problems.
d460 4
@


1.36
log
@Revision 4.75
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.35 2004/12/30 18:42:24 abe Exp abe $
d462 2
a463 1
#define	SZOFFTYPE	long long	/* size and offset internal storage
d495 1
a495 1
	ino_t inode;			/* directory st_ino */
d524 1
a524 1
	ino_t i;			/* inode number */
@


1.35
log
@Revision 4.74
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.34 2004/03/10 23:51:34 abe Exp abe $
d44 1
@


1.34
log
@Revision 4.71
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.33 2003/10/15 20:22:39 abe Exp abe $
d101 1
a101 1
# if	defined(NETBSDV) && NETBSDV>=1030
d103 1
a103 1
# endif	/* defined(NETBSDV) && NETBSDV>=1030 */
d148 1
a148 1
# if	defined(NETBSDV) && NETBSDV>=1030
d150 1
a150 1
# endif	/* defined(NETBSDV) && NETBSDV>=1030 */
d205 1
a205 1
# if	defined(NETBSDV) && NETBSDV>=1030
d220 1
a220 1
# endif	/* defined(NETBSDV) && NETBSDV>=1030 */
d248 8
d342 1
a342 1
#  if	defined(NETBSDV) && NETBSDV>=1050 && __NetBSD_Version__<106060000
d344 1
a344 1
#  endif	/* defined(NETBSDV) && NETBSDV>=1050
d368 9
d381 7
d542 1
a542 1
#  if	(defined(OPENBSDV) && OPENBSDV>=2010) || (defined(NETBSDV) && NETBSDV>=1020)
d544 1
a544 1
#endif	/* (defined(OPENBSDV) && OPENBSDV>=2010) || (defined(NETBSDV) && NETBSDV>=1020) */
d554 1
a554 1
#  if	(defined(OPENBSDV) && OPENBSDV>=2010) || (defined(NETBSDV) && NETBSDV>=1020)
d556 1
a556 1
#  else	/* (defined(OPENBSDV) && OPENBSDV>=2010) || (defined(NETBSDV) && NETBSDV>=1020) */
d562 1
a562 1
#  endif	/* (defined(OPENBSDV) && OPENBSDV>=2010) || (defined(NETBSDV) && NETBSDV>=1020) */
@


1.33
log
@Revision 4.69
Adjust for header location differences.
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.32 2003/10/13 13:29:20 abe Exp abe $
d172 20
@


1.32
log
@Revision 4.69
Correct comment
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.31 2003/10/07 14:34:14 abe Exp abe $
d108 1
d111 4
@


1.31
log
@Revision 4.69
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.30 2003/06/11 11:44:50 abe Exp abe $
d489 1
a489 1
 * Definitions for rnam.c
@


1.30
log
@Revision 4.68
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.29 2003/03/23 19:50:53 abe Exp abe $
d65 1
d238 13
d253 1
d259 2
d262 1
d272 14
d288 17
d318 3
d322 14
d455 4
d460 2
@


1.29
log
@Revision 4.67
Include <sys/lwp.h> if it is available.
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.28 2003/03/21 17:42:56 abe Exp abe $
d60 2
a61 2
# if	defined(NETBSDV)
#  if	__NetBSD_Version__>=106060000
d63 1
d65 1
d67 2
a68 1
#  endif	/* __NetBSD_Version__>=106060000 */
d70 1
d72 1
d74 2
a75 1
#  if	__NetBSD_Version__>=106060000
d77 2
a78 2
#  endif	/* __NetBSD_Version__>=106060000 */
# endif	/* defined(NETBSDV) */
d82 7
d90 7
d110 2
d125 3
d131 3
d209 6
d260 1
a260 1
#  if	defined(NETBSDV) && NETBSDV>=1050
d262 2
a263 1
#  endif	/* defined(NETBSDV) && NETBSDV>=1050 */
@


1.28
log
@Revision 4.67
Add kqueue support.
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.27 2002/10/08 20:21:52 abe Exp abe $
d55 4
@


1.27
log
@Revision 4.65
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.26 2002/06/17 01:44:11 abe Exp abe $
d242 7
@


1.26
log
@Revision 4.64
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.25 2002/04/19 20:53:24 abe Exp abe $
d57 6
d64 4
d222 1
a222 1
#  if	defined(NETBSDV) && NETBSDV>=1060
d224 1
a224 1
#  endif	/* defined(NETBSDV) && NETBSDV>=1060 */
@


1.25
log
@Revision 4.63
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.24 2002/02/26 15:20:45 abe Exp abe $
d209 9
@


1.24
log
@Revision 4.62
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.23 2002/01/14 15:55:45 abe Exp abe $
d250 1
a250 1
# if	defined(OPENBSDV)
d261 1
a261 1
#endif	/* defined(OPENBSDV) */
@


1.23
log
@Revision 4.61
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.22 2001/02/13 14:16:01 abe Exp abe $
d48 5
d270 2
d275 2
@


1.22
log
@Revision 4.55
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.21 2001/01/16 12:17:30 abe Exp abe $
d67 1
d93 1
@


1.21
log
@Revision 4.54
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.20 2000/12/04 14:32:08 abe Exp abe $
d186 1
a186 1
#define	P_PGRP		kp_eproc.e_pgid
@


1.20
log
@Revision 4.53
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.19 2000/08/21 11:58:38 abe Exp abe $
d66 26
@


1.19
log
@Revision 4.51
Compensate for missing struct vop_advlock_args definition.
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.18 2000/08/01 12:44:26 abe Exp abe $
d295 1
@


1.18
log
@Revision 4.51
Use VM header files from <uvm>, if possible.
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.17 2000/06/22 12:55:23 abe Exp abe $
d186 5
@


1.17
log
@Revision 4.50
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.16 2000/03/14 20:37:26 abe Exp abe $
d200 6
d210 1
@


1.16
log
@Revision 4.49
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.15 1999/10/22 08:22:32 abe Exp abe $
d232 4
@


1.15
log
@Revision 4.46
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.14 99/10/13 09:14:45 abe Exp Locker: abe $
d50 5
d79 1
a79 1
#include <netinet6/ip6.h>
d191 4
@


1.14
log
@Revision 4.46
Handle special OpenBSD 2.3 case for SPARC.
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.13 99/07/19 14:02:32 abe Exp Locker: abe $
d73 1
a73 1
# if	defined(HASIPv6) && defined(NETBSDV)
d76 1
a76 1
# endif	/* defined(HASIPv6) && defined(NETBSDV) */
@


1.13
log
@Revision 4.45
Add NetBSD IPv6 support.
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.12 99/03/29 07:15:02 abe Exp Locker: abe $
d197 9
@


1.12
log
@Revision 4.42
Make UVM adjustment; make file name reporting improvements.
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.11 99/02/27 15:10:45 abe Exp Locker: abe $
d72 6
@


1.11
log
@Revision 4.41
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.10 98/05/22 07:18:22 abe Exp $
a143 2
#undef	TRUE
#undef	FALSE
d292 1
a292 1
  #else	/* (defined(OPENBSDV) && OPENBSDV>=2010) || (defined(NETBSDV) && NETBSDV>=1020) */
@


1.10
log
@Revision 4.33
Add UVM support.
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.9 98/04/29 13:40:20 abe Exp Locker: abe $
d55 5
d61 5
d92 18
@


1.9
log
@Revision 4.32
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.8 98/03/06 08:24:36 abe Exp Locker: abe $
d71 10
d152 7
@


1.8
log
@Revision 4.27
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.7 98/02/13 12:43:48 abe Exp Locker: abe $
d153 1
a153 1
#define	KA_T		u_long
@


1.7
log
@Revision 4.26
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.6 97/12/11 16:00:04 abe Exp Locker: abe $
d176 1
a176 1
	struct mount *addr;		/* kernel address */
@


1.6
log
@Revision 4.22
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.5 97/08/15 08:22:16 abe Exp Locker: abe $
d186 10
a195 5
        dev_t dev;              	/* st_dev */
        char *dir;              	/* directory */
        char *fsname;           	/* file system */
	ino_t inode;			/* st_ino */
	mode_t mode;			/* st_mode */
a196 1
	dev_t rdev;			/* st_rdev */
@


1.5
log
@Revision 4.15
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.4 97/07/02 11:12:26 abe Exp Locker: abe $
d74 4
@


1.4
log
@Revision 4.13
Indicate sources are shared by NetBSD and OpenBSD.
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.3 97/05/30 16:29:43 abe Exp Locker: abe $
d64 6
@


1.3
log
@Revision 4.09
@
text
@d2 1
a2 1
 * dlsof.h - NetBSD header file for lsof
d34 1
a34 1
 * $Id: dlsof.h,v 1.2 97/04/29 10:02:48 abe Exp Locker: abe $
@


1.2
log
@Revision 4.06
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.1 97/02/24 07:36:04 abe Exp $
d221 4
d231 1
a231 1
#define	NCACHE_NODEID	nc_vpid		/* node ID in NCACHE */
d233 4
a236 1
#  if	defined(NetBSD1_0) && NetBSD<1994101
d238 1
a238 1
#  else	/* !defined(NetBSD1_0) || NetBSD>=1994101 */
d240 2
a241 1
#  endif	/* defined(NetBSD1_0) && NetBSD<1994101 */
d243 1
a243 1
#define	NCACHE_PARADDR	nc_dvp		/* parent node address in NCACHE */
d245 2
@


1.1
log
@Initial revision
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.13 97/01/17 09:19:50 abe Exp $
d110 1
a110 1
#include "/usr/src/sys/miscfs/fdesc/fdesc.h"
d114 6
d121 1
a121 1
#include "/usr/src/sys/miscfs/procfs/procfs.h"
@
