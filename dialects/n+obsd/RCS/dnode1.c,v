head	1.8;
access;
symbols;
locks; strict;
comment	@ * @;


1.8
date	2005.08.08.19.53.24;	author abe;	state Exp;
branches;
next	1.7;

1.7
date	2004.07.06.19.20.18;	author abe;	state Exp;
branches;
next	1.6;

1.6
date	2003.10.15.20.22.39;	author abe;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.16.12.17.30;	author abe;	state Exp;
branches;
next	1.4;

1.4
date	99.05.04.09.01.26;	author abe;	state Exp;
branches;
next	1.3;

1.3
date	97.10.23.12.36.47;	author abe;	state Exp;
branches;
next	1.2;

1.2
date	97.07.02.11.12.32;	author abe;	state Exp;
branches;
next	1.1;

1.1
date	97.04.29.15.32.53;	author abe;	state Exp;
branches;
next	;


desc
@NetBSD/OpenBSD node functions
@


1.8
log
@Revision 4.76
@
text
@/*
 * dnode1.c - NetBSD and OpenBSD node functions for lsof
 *
 * This module must be separate to keep separate the multiple kernel inode
 * structure definitions.
 */


/*
 * Copyright 1995 Purdue Research Foundation, West Lafayette, Indiana
 * 47907.  All rights reserved.
 *
 * Written by Victor A. Abell
 *
 * This software is not subject to any license of the American Telephone
 * and Telegraph Company or the Regents of the University of California.
 *
 * Permission is granted to anyone to use this software for any purpose on
 * any computer system, and to alter it and redistribute it freely, subject
 * to the following restrictions:
 *
 * 1. Neither the authors nor Purdue University are responsible for any
 *    consequences of the use of this software.
 *
 * 2. The origin of this software must not be misrepresented, either by
 *    explicit claim or by omission.  Credit to the authors and Purdue
 *    University must appear in documentation and sources.
 *
 * 3. Altered versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 *
 * 4. This notice may not be removed or altered.
 */

#ifndef lint
static char copyright[] =
"@@(#) Copyright 1994 Purdue Research Foundation.\nAll rights reserved.\n";
static char *rcsid = "$Id: dnode1.c,v 1.7 2004/07/06 19:20:18 abe Exp abe $";
#endif


#include "lsof.h"

#if	defined(HAS9660FS)
/*
 * Undo some conflicting node header file definitions.
 */

#undef	doff_t
#undef	i_dev
#undef	i_devvp
#undef	i_number
#undef	IN_ACCESS
#undef	IN_LOCKED
#undef	i_size
#undef	IN_WANTED


/*
 * At last, #include the desired header files.
 */

# if	HAS9660FS==1
#include <isofs/cd9660/iso.h>
#include <isofs/cd9660/cd9660_node.h>
# else	/* HAS9660FS!=1 */
#include <fs/cd9660/iso.h>
#include <fs/cd9660/cd9660_node.h>
# endif	/* HAS9660FS==1 */


/*
 * read_iso_node() -- read CD 9660 iso_node
 */

int
read_iso_node(v, d, ino, nl, sz)
	struct vnode *v;		/* containing vnode */
	dev_t *d;			/* returned device number */
	INODETYPE *ino;			/* returned inode number */
	long *nl;			/* returned link count */
	SZOFFTYPE *sz;			/* returned size */
{
	struct iso_node i;

	if (!v->v_data
	||  kread((KA_T)v->v_data, (char *)&i, sizeof(i)))
	    return(1);
	*d = i.i_dev;
	*ino = (INODETYPE)i.i_number;
	*nl = i.inode.iso_links;
	*sz = (SZOFFTYPE)i.i_size;
	return(0);
}
#endif	/* defined(HAS9660FS) */
@


1.7
log
@Revision 4.72
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.6 2003/10/15 20:22:39 abe Exp abe $";
d80 1
a80 1
	unsigned long *ino;		/* returned inode number */
d90 1
a90 1
	*ino = i.i_number;
@


1.6
log
@Revision 4.69
Adjust for header location differences.
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.5 2001/01/16 12:17:30 abe Exp abe $";
d51 1
@


1.5
log
@Revision 4.54
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.4 1999/05/04 09:01:26 abe Exp abe $";
d62 1
d65 4
@


1.4
log
@Revision 4.43
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.3 97/10/23 12:36:47 abe Exp Locker: abe $";
a44 12
/*
 * The netexport stucture is defined in <sys/mount.h>, but getting its
 * definition requires defining KERNEL, and doing that breaks other things.
 * Since the nextexport structure definition only affects the iso_mnt structure
 * (<isofs/cd9660/iso.h>) and since the iso_mnt structure definition only
 * appears in the iso_node structure definition as a pointer cast, it seemed
 * easiest to make this dummy netexport structure definition.
 */
struct netexport {
	int dummy;
};

@


1.3
log
@Revision 4.18
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.2 97/07/02 11:12:32 abe Exp Locker: abe $";
d83 1
a83 1
read_iso_node(v, d, ino, sz)
d87 1
d97 1
@


1.2
log
@Revision 4.13
Indicate sources are shared by NetBSD and OpenBSD.
@
text
@d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.1 97/04/29 15:32:53 abe Exp Locker: abe $";
d87 1
a87 1
	unsigned long *sz;		/* returned size */
d96 1
a96 1
	*sz = i.i_size;
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * dnode1.c - NetBSD node functions for lsof
d38 1
a38 1
static char *rcsid = "$Id: dnode1.c,v 1.1 97/02/24 07:33:51 abe Exp $";
@
