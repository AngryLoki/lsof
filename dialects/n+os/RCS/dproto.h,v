head	1.6;
access;
symbols;
locks; strict;
comment	@ * @;


1.6
date	2001.08.09.11.44.07;	author abe;	state Exp;
branches;
next	1.5;

1.5
date	99.01.25.07.09.08;	author abe;	state Exp;
branches;
next	1.4;

1.4
date	98.11.23.07.39.41;	author abe;	state Exp;
branches;
next	1.3;

1.3
date	98.03.18.14.39.28;	author abe;	state Exp;
branches;
next	1.2;

1.2
date	98.03.06.07.35.55;	author abe;	state Exp;
branches;
next	1.1;

1.1
date	97.02.24.07.37.11;	author abe;	state Exp;
branches;
next	;


desc
@Lsof version 4
@


1.6
log
@Revision 4.58
@
text
@/*
 * dproto.h - NEXTSTEP and OPENSTEP function prototypes for lsof
 *
 * The _PROTOTYPE macro is defined in the common proto.h.
 */


/*
 * Copyright 1994 Purdue Research Foundation, West Lafayette, Indiana
 * 47907.  All rights reserved.
 *
 * Written by Victor A. Abell
 *
 * This software is not subject to any license of the American Telephone
 * and Telegraph Company or the Regents of the University of California.
 *
 * Permission is granted to anyone to use this software for any purpose on
 * any computer system, and to alter it and redistribute it freely, subject
 * to the following restrictions:
 *
 * 1. Neither the authors nor Purdue University are responsible for any
 *    consequences of the use of this software.
 *
 * 2. The origin of this software must not be misrepresented, either by
 *    explicit claim or by omission.  Credit to the authors and Purdue
 *    University must appear in documentation and sources.
 *
 * 3. Altered versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 *
 * 4. This notice may not be removed or altered.
 */


/*
 * $Id: dproto.h,v 1.5 1999/01/25 07:09:08 abe Exp abe $
 */


#if	STEPV>=31
_PROTOTYPE(extern void clr_svnc,(void));
#endif	/* STEPV>=31 */

_PROTOTYPE(extern int is_file_named,(char *p, int cd));

#if     defined(HAS_AFS)
_PROTOTYPE(extern struct vnode *alloc_vcache,(void));
_PROTOTYPE(extern void ckAFSsym,(struct nlist *nl));
_PROTOTYPE(extern int hasAFS,(struct vnode *vp));
_PROTOTYPE(extern void process_socket,(KA_T vp));
_PROTOTYPE(extern int readafsnode,(caddr_t va, struct vnode *v, struct afsnode *
an));
#endif  /* defined(HAS_AFS) */
@


1.5
log
@Revision 4.40
@
text
@d2 1
a2 1
 * dproto.h - NEXTSTEP and OpenStep function prototypes for lsof
d36 1
a36 1
 * $Id: dproto.h,v 1.4 98/11/23 07:39:41 abe Exp Locker: abe $
@


1.4
log
@Revision 4.38
@
text
@d36 1
a36 1
 * $Id: dproto.h,v 1.3 98/03/18 14:39:28 abe Exp Locker: abe $
d44 1
a44 1
_PROTOTYPE(extern int is_file_named,(char *p, enum vtype ty));
@


1.3
log
@Revision 4.29
Remove completevfs() and readvfs().
@
text
@d2 1
a2 1
 * dproto.h - NEXTSTEP function prototypes for lsof
d36 1
a36 1
 * $Id: dproto.h,v 1.2 98/03/06 07:35:55 abe Exp Locker: abe $
d40 1
a40 1
#if	NEXTSTEPV>=31
d42 1
a42 1
#endif	/* NEXTSTEPV>=31 */
@


1.2
log
@Revision 4.27
Support 64 bit kernel addresses.
@
text
@d36 1
a36 1
 * $Id: dproto.h,v 1.1 97/02/24 07:37:11 abe Exp Locker: abe $
a43 1
_PROTOTYPE(extern void completevfs,(struct l_vfs *vfs, dev_t *dev));
a44 1
_PROTOTYPE(extern struct l_vfs *readvfs,(KA_T ka));
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
 * $Id: dproto.h,v 1.8 96/09/30 07:24:41 abe Exp $
d46 1
a46 1
_PROTOTYPE(extern struct l_vfs *readvfs,(struct vfs *ka));
d52 1
@
