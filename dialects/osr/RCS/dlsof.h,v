head	1.14;
access;
symbols;
locks; strict;
comment	@ * @;


1.14
date	2007.04.24.16.22.40;	author abe;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.28.22.09.23;	author abe;	state Exp;
branches;
next	1.12;

1.12
date	2005.08.08.19.54.32;	author abe;	state Exp;
branches;
next	1.11;

1.11
date	2000.12.04.14.32.49;	author abe;	state Exp;
branches;
next	1.10;

1.10
date	99.06.22.08.22.02;	author abe;	state Exp;
branches;
next	1.9;

1.9
date	99.01.25.07.10.41;	author abe;	state Exp;
branches;
next	1.8;

1.8
date	98.04.29.13.41.00;	author abe;	state Exp;
branches;
next	1.7;

1.7
date	98.03.06.08.25.31;	author abe;	state Exp;
branches;
next	1.6;

1.6
date	98.02.13.12.44.00;	author abe;	state Exp;
branches;
next	1.5;

1.5
date	97.12.11.16.00.21;	author abe;	state Exp;
branches;
next	1.4;

1.4
date	97.08.15.08.23.41;	author abe;	state Exp;
branches;
next	1.3;

1.3
date	97.07.09.08.14.47;	author abe;	state Exp;
branches;
next	1.2;

1.2
date	97.04.17.08.06.57;	author abe;	state Exp;
branches;
next	1.1;

1.1
date	97.02.24.07.44.28;	author abe;	state Exp;
branches;
next	;


desc
@Lsof version 4
@


1.14
log
@Revision 4.78
@
text
@/*
 * dlsof.h - SCO OpenServer header file for lsof
 */


/*
 * Copyright 1995 Purdue Research Foundation, West Lafayette, Indiana
 * 47907.  All rights reserved.
 *
 * Written by Victor A. Abell
 *
 * This software is not subject to any license of the American Telephone
 * and Telegraph Company or the Regents of the University of California.
 *
 * Permission is granted to anyone to use this software for any purpose on
 * any computer system, and to alter it and redistribute it freely, subject
 * to the following restrictions:
 *
 * 1. Neither the authors nor Purdue University are responsible for any
 *    consequences of the use of this software.
 *
 * 2. The origin of this software must not be misrepresented, either by
 *    explicit claim or by omission.  Credit to the authors and Purdue
 *    University must appear in documentation and sources.
 *
 * 3. Altered versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 *
 * 4. This notice may not be removed or altered.
 */


/*
 * $Id: dlsof.h,v 1.13 2006/03/28 22:09:23 abe Exp abe $
 */


#if	!defined(OSR_LSOF_H)
#define	OSR_LSOF_H	1

#include <dirent.h>
#include <fcntl.h>
#include <mnttab.h>
#include <nlist.h>
#include <setjmp.h>
#include <signal.h>
#include <string.h>

# if	OSRV>=500
#include <strings.h>
# endif	/* OSRV>=500 */

#include <stdlib.h>
#include <unistd.h>

#include <sys/conf.h>
#include <sys/file.h>
#include <sys/flock.h>
#include <sys/fstyp.h>
#include <sys/immu.h>
#include <sys/inode.h>
#include <sys/region.h>
#include <sys/proc.h>
#include <sys/sysi86.h>

/*
 * This confusing sequence of redefinitions of xdevmap allows lsof to size
 * its copy of the kernel's xdevmap[] table dynamically, based on the
 * kernel's nxdevmaps value.
 *
 * The net result is that there is a dummy struct XDEVMAP[1], defined in
 * dstore.c, that is never used.  The copy of the kernel's xdevmap[] table
 * is stored in the space malloc()'d in dproc.c and addressed by Xdevmap.
 * The last redefinition of xdevmap to Xdevmap causes the macros of
 * <sys/sysmacros.h> to use Xdevmap.
 *
 * All this is done: 1) to avoid having to allocate a large amount of fixed
 * space in advance to a copy of the kernel's xdevmap; and 2) to keep CC from
 * complaining about the absence of a "struct xdevmap xdevmap[]," matching
 * the "extern struct xdevmap xdevmap[]" declaration in <sys/sysmacros.h>,
 * while still allowing lsof to use the equivalent of a "struct xdevmap *"
 * construct instead, particularly with the kernel forms of the major() and
 * minor() macros.
 */

#define	xdevmap	XDEVMAP
#define	_INKERNEL
#include <sys/sysmacros.h>
#undef	_INKERNEL
extern struct XDEVMAP *Xdevmap;
#undef	xdevmap
#define	xdevmap	Xdevmap

#include <sys/stream.h>
#include <sys/time.h>
#include <sys/dir.h>
#include <sys/user.h>
#include <sys/var.h>

# if	defined(HAS_NFS)
#define	multiple_groups	1
#include <sys/fs/nfs/types.h>
#include <sys/fs/nfs/nfs.h>
#include <sys/fs/nfs/ucred.h>
#include <sys/fs/nfs/rnode.h>
# endif	/* defined(HAS_NFS) */

#include <sys/socket.h>
#include <sys/net/domain.h>
#undef	NOGROUP
#include <rpc/rpc.h>
#include <rpc/pmap_prot.h>

# if	OSRV<500
#include <sys/net/protosw.h>
#include <sys/net/socketvar.h>
# else	/* OSRV>=500 */
#include <sys/protosw.h>
#include <sys/socketvar.h>
#include <sys/un.h>
#include <sys/fs/hpps.h>
# endif	/* OSRV<500 */

#include <sys/netinet/in.h>
#include <sys/net/route.h>
#include <sys/netinet/in_pcb.h>
#include <sys/netinet/ip_var.h>
#include <sys/netinet/tcp.h>
#include <sys/netinet/tcp_fsm.h>
#include <sys/netinet/tcp_timer.h>
#include <sys/netinet/tcp_var.h>
#include <sys/netinet/udp.h>
#include <sys/utsname.h>

#define	INKERNEL
#include <sys/netinet/udp_var.h>
#undef	INKERNEL


/*
 * Adjust for the availability of symbolic links.
 */

# if	defined(HAS_STATLSTAT)
#define	lstat	statlstat
# else	/* !defined(HAS_STATLSTAT) */
#define	lstat	stat
#define	readlink(path, buf, len)	(-1)
# endif	/* defined(HAS_STATLSTAT) */



#define	COMP_P		const void
#define DEVINCR		1024	/* device table malloc() increment */
#define	DIRTYPE		dirent
typedef	off_t		KA_T;
#define	KMEM		"/dev/kmem"
#define MALLOC_P	void
#define	MNTTAB		"/etc/mnttab"
#define FREE_P		MALLOC_P
#define MALLOC_S	size_t

# if	!defined(MAXPATHLEN)
#define	MAXPATHLEN	1024
# endif	/* !defined(MAXPATHLEN) */

#define MAXSEGS		100	/* maximum text segments */
#define	MAXSYSCMDL	(PSCOMSIZ - 1)	/* max system command name length */

# if	OSRV<500
#define	N_UNIX		"/unix"
# endif	/* OSRV<500 */

#define	PROCBFRD	16	/* count of proc structures buffered */
#define	PROCSIZE	sizeof(struct proc)
#define QSORT_P		void
#define	READLEN_T	unsigned
#define STRNCPY_L	size_t
#define	STRNML		32
#define U_SIZE		sizeof(struct user)


/*
 * Global storage definitions (including their structure definitions)
 */

extern char **Cdevsw;
extern int Cdevcnt;
extern int CloneMajor;
extern int EventMajor;
extern char **Fsinfo;
extern int Fsinfomax;
extern int HaveCloneMajor;
extern int HaveEventMajor;
extern int HaveSockdev;
extern int Hz;
extern int Kd;
extern KA_T Lbolt;

extern int nxdevmaps;			/* maximum kernel xdevmap[] index */

struct mounts {
	char *dir;			/* directory (mounted on) */
	char *fsname;           	/* file system
					 * (symbolic links unresolved) */
	char *fsnmres;           	/* file system
					 * (symbolic links resolved) */
	dev_t dev;			/* directory st_dev */
	dev_t rdev;			/* directory st_rdev */
	INODETYPE inode;		/* directory st_ino */
	mode_t mode;			/* directory st_mode */
	mode_t fs_mode;			/* file system st_mode */
	struct mounts *next;		/* forward link */

# if	defined(HASFSTYPE)
	char *fstype;			/* st_fstype */
# endif

};

#define	NL_NAME		n_name		/* name element in struct nlist */

struct sfile {
	char *aname;			/* argument file name */
	char *name;			/* file name (after readlink()) */
	char *devnm;			/* device name (optional) */
	dev_t dev;			/* device */
	dev_t rdev;			/* raw device */
	mode_t mode;			/* S_IFMT mode bits from stat() */
	int type;			/* file type: 0 = file system
				 	 *	      1 = regular file */
	INODETYPE i;			/* inode number */
	int f;				/* file found flag */
	struct sfile *next;		/* forward link */
};

extern int Sockdev;
extern KA_T Socktab;

/*
 * Definitions for dvch.c, isfn.c, and rdev.c
 */

#define	CLONEMAJ	CloneMajor	/* clone major variable name */

# if	defined(HASDCACHE)
#  if	OSRV<500
#define	DVCH_CHOWN	1		/* no fchown() below release 5.0 */
#  endif	/* OSRV<500 */
# endif	/* defined(HASDCACHE) */

#define	HAS_STD_CLONE	1		/* has standard clone structure */
#define	HAVECLONEMAJ	HaveCloneMajor	/* clone major status variable name */

#endif	/* OSR_LSOF_H	*/
@


1.13
log
@Revision 4.77
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.12 2005/08/08 19:54:32 abe Exp abe $
d74 1
a74 1
 * The last redefinition of xdevmap to Xdevmap causes the macroes of
d83 1
a83 1
 * minor() macroes.
@


1.12
log
@Revision 4.76
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.11 2000/12/04 14:32:49 abe Exp abe $
d168 1
@


1.11
log
@Revision 4.53
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.10 1999/06/22 08:22:02 abe Exp abe $
a198 7
struct l_ino {
	dev_t dev;			/* device */
	dev_t rdev;			/* real device */
	ino_t number;			/* inode number */
	long size;			/* file size */
};

d209 1
a209 1
	ino_t inode;			/* directory st_ino */
d231 1
a231 1
	ino_t i;			/* inode number */
@


1.10
log
@Revision 4.44
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.9 99/01/25 07:10:41 abe Exp Locker: abe $
d234 1
@


1.9
log
@Revision 4.40
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.8 98/04/29 13:41:00 abe Exp Locker: abe $
a187 7

struct clone {
	int dx;			/* index of device entry in Devtp[] */
	struct clone *next;	/* forward link */
};
extern struct clone *Clone;

d246 1
a246 1
 * Definitions for dvch.c
d249 2
a251 4
#define	DCACHE_CLONE	rw_clone_sect
#define	DCACHE_CLR	clr_sect	/* function to clear clone cache
					 * when reading the device cache
					 * file fails */
d257 1
a257 5
/*
 * Definitions for isfn.c
 */

#define	CLONEMAJ	CloneMajor	/* clone major variable name */
@


1.8
log
@Revision 4.32
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.7 98/03/06 08:25:31 abe Exp Locker: abe $
d155 1
d265 7
@


1.7
log
@Revision 4.27
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.6 98/02/13 12:44:00 abe Exp Locker: abe $
d155 1
a155 1
#define	KA_T		off_t
@


1.6
log
@Revision 4.26
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.5 97/12/11 16:00:21 abe Exp Locker: abe $
d203 1
a203 1
extern unsigned long Lbolt;
@


1.5
log
@Revision 4.22
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.4 97/08/15 08:23:41 abe Exp Locker: abe $
d215 10
a224 5
	dev_t dev;			/* st_dev */
	char *dir;			/* directory */
	char *fsname;			/* file system */
	ino_t inode;			/* st_ino */
	mode_t mode;			/* st_mode */
a225 1
	dev_t rdev;			/* st_rdev */
@


1.4
log
@Revision 4.15
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.3 97/07/09 08:14:47 abe Exp $
d110 3
@


1.3
log
@Revision 4.13
Change SCO UNIX to SCO OpenServer.  Change SCOV to OSRV.
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.2 97/04/17 08:06:57 abe Exp Locker: abe $
d125 4
@


1.2
log
@Revision 4.04
@
text
@d2 1
a2 1
 * dlsof.h - SCO Unix header file for lsof
d34 1
a34 1
 * $Id: dlsof.h,v 1.1 97/02/24 07:44:28 abe Exp $
d38 2
a39 2
#if	!defined(SCO_LSOF_H)
#define	SCO_LSOF_H	1
d49 1
a49 1
# if	SCOV>=500
d51 1
a51 1
# endif	/* SCOV>=500 */
d111 1
a111 1
# if	SCOV<500
d114 1
a114 1
# else	/* SCOV>=500 */
d119 1
a119 1
# endif	/* SCOV<500 */
d161 1
a161 1
# if	SCOV<500
d163 1
a163 1
# endif	/* SCOV<500 */
d249 3
a251 3
#  if	SCOV<500
#define	DVCH_CHOWN	1		/* no fchown() below Release 5.0 */
#  endif	/* SCOV<500 */
d254 1
a254 1
#endif	/* SCO_LSOF_H	*/
@


1.1
log
@Initial revision
@
text
@d34 1
a34 1
 * $Id: dlsof.h,v 1.17 96/12/28 11:46:24 abe Exp $
d126 1
a149 1
#define N_UNIX		"/unix"
d160 5
@
