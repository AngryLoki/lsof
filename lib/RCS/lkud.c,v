head	1.7;
access;
symbols;
locks; strict;
comment	@ * @;


1.7
date	2008.10.21.16.12.36;	author abe;	state Exp;
branches;
next	1.6;

1.6
date	2005.08.08.19.40.37;	author abe;	state Exp;
branches;
next	1.5;

1.5
date	2000.12.04.14.05.08;	author abe;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.31.03.22.01;	author abe;	state Exp;
branches;
next	1.3;

1.3
date	97.10.24.08.02.28;	author abe;	state Exp;
branches;
next	1.2;

1.2
date	97.05.26.14.59.54;	author abe;	state Exp;
branches;
next	1.1;

1.1
date	97.02.24.07.29.37;	author abe;	state Exp;
branches;
next	;


desc
@Lsof version 4
@


1.7
log
@Revision 4.81
@
text
@/*
 * lkud.c -- device lookup functions for lsof library
 */


/*
 * Copyright 1997 Purdue Research Foundation, West Lafayette, Indiana
 * 47907.  All rights reserved.
 *
 * Written by Victor A. Abell
 *
 * This software is not subject to any license of the American Telephone
 * and Telegraph Company or the Regents of the University of California.
 *
 * Permission is granted to anyone to use this software for any purpose on
 * any computer system, and to alter it and redistribute it freely, subject
 * to the following restrictions:
 *
 * 1. Neither the authors nor Purdue University are responsible for any
 *    consequences of the use of this software.
 *
 * 2. The origin of this software must not be misrepresented, either by
 *    explicit claim or by omission.  Credit to the authors and Purdue
 *    University must appear in documentation and sources.
 *
 * 3. Altered versions must be plainly marked as such, and must not be
 *    misrepresented as being the original software.
 *
 * 4. This notice may not be removed or altered.
 */


/*
 * lkud.c -- lookup device
 *
 * The caller may define:
 *
 *	HASBLKDEV	to activate block device lookup
 */


#include "../machine.h"

#if	defined(HASBLKDEV) || defined(USE_LIB_LKUPDEV)

# if	!defined(lint)
static char copyright[] =
"@@(#) Copyright 1997 Purdue Research Foundation.\nAll rights reserved.\n";
static char *rcsid = "$Id: lkud.c,v 1.6 2005/08/08 19:40:37 abe Exp abe $";
# endif	/* !defined(lint) */

#include "../lsof.h"

#else	/* !defined(HASBLKDEV) && !defined(USE_LIB_LKUPDEV) */
char lkud_d1[] = "d"; char *lkud_d2 = lkud_d1;
#endif	/* defined(HASBLKDEV) || defined(USE_LIB_LKUPDEV) */



#if	defined(HASBLKDEV)
/*
 * lkupbdev() - look up a block device
 */

struct l_dev *
lkupbdev(dev, rdev, i, r)
	dev_t *dev;			/* pointer to device number */
	dev_t *rdev;			/* pointer to raw device number */
	int i;				/* inode match status */
	int r;				/* if 1, rebuild the device cache with
					 * rereaddev() when no match is found
					 * and HASDCACHE is defined and
					 * DCunsafe is one */
{
	INODETYPE inode = (INODETYPE)0;
	int low, hi, mid;
	struct l_dev *dp;
	int ty = 0;

	if (*dev != DevDev)
	    return((struct l_dev *)NULL);
	readdev(0);
	if (i) {
	    inode = Lf->inode;
	    ty = Lf->inp_ty;
	}
/*
 * Search block device table for match.
 */

# if	defined(HASDCACHE)

lkupbdev_again:

# endif	/* defined(HASDCACHE) */

	low = mid = 0;
	hi = BNdev - 1;
	while (low <= hi) {
	    mid = (low + hi) / 2;
	    dp = BSdev[mid];
	    if (*rdev < dp->rdev)
		hi = mid - 1;
	    else if (*rdev > dp->rdev)
		low = mid + 1;
	    else {
		if ((i == 0) || (ty != 1) || (inode == dp->inode)) {

# if	defined(HASDCACHE)
		    if (DCunsafe && !dp->v && !vfy_dev(dp))
			goto lkupbdev_again;
# endif	/* defined(HASDCACHE) */

		    return(dp);
		}
		if (inode < dp->inode)
		    hi = mid - 1;
		else
		    low = mid + 1;
	    }
	}

# if	defined(HASDCACHE)
	if (DCunsafe && r) {
	    (void) rereaddev();
	    goto lkupbdev_again;
	}
# endif	/* defined(HASDCACHE) */

	return((struct l_dev *)NULL);
}
#endif	/* defined(HASBLKDEV) */


#if	defined(USE_LIB_LKUPDEV)
/*
 * lkupdev() - look up a character device
 */

struct l_dev *
lkupdev(dev, rdev, i, r)
	dev_t *dev;			/* pointer to device number */
	dev_t *rdev;			/* pointer to raw device number */
	int i;				/* inode match status */
	int r;				/* if 1, rebuild the device cache with
					 * rereaddev() when no match is found
					 * and HASDCACHE is defined and
					 * DCunsafe is one */
{
	INODETYPE inode = (INODETYPE)0;
	int low, hi, mid;
	struct l_dev *dp;
	int ty = 0;

	if (*dev != DevDev)
	    return((struct l_dev *)NULL);
	readdev(0);
	if (i) {
	    inode = Lf->inode;
	    ty = Lf->inp_ty;
	}
/*
 * Search device table for match.
 */

# if	defined(HASDCACHE)

lkupdev_again:

# endif	/* defined(HASDCACHE) */

	low = mid = 0;
	hi = Ndev - 1;
	while (low <= hi) {
	    mid = (low + hi) / 2;
	    dp = Sdev[mid];
	    if (*rdev < dp->rdev)
		hi = mid - 1;
	    else if (*rdev > dp->rdev)
		low = mid + 1;
	    else {
		if ((i == 0) || (ty != 1) || (inode == dp->inode)) {

# if	defined(HASDCACHE)
		    if (DCunsafe && !dp->v && !vfy_dev(dp))
			goto lkupdev_again;
# endif	/* defined(HASDCACHE) */

		    return(dp);
		}
		if (inode < dp->inode)
		    hi = mid - 1;
		else
		    low = mid + 1;
	    }
	}

# if	defined(HASDCACHE)
	if (DCunsafe && r) {
	    (void) rereaddev();
	    goto lkupdev_again;
	}
# endif	/* defined(HASDCACHE) */

	return((struct l_dev *)NULL);
}
#endif	/* defined(USE_LIB_LKUPDEV) */
@


1.6
log
@Revision 4.76
@
text
@d49 1
a49 1
static char *rcsid = "$Id: lkud.c,v 1.5 2000/12/04 14:05:08 abe Exp abe $";
d55 1
a55 1
static char d1[] = "d"; static char *d2 = d1;
@


1.5
log
@Revision 4.53
@
text
@d49 1
a49 1
static char *rcsid = "$Id: lkud.c,v 1.4 2000/05/31 03:22:01 abe Exp abe $";
d75 1
a75 1
	ino_t inode = (ino_t)0;
d84 1
a84 1
	    inode = (ino_t)Lf->inode;
d107 1
a107 1
		if (i == 0 || ty != 1 || inode == dp->inode) {
d150 1
a150 1
	ino_t inode = (ino_t)0;
d159 1
a159 1
	    inode = (ino_t)Lf->inode;
d182 1
a182 1
		if (i == 0 || ty != 1 || inode == dp->inode) {
@


1.4
log
@Revision 4.50
@
text
@d49 1
a49 1
static char *rcsid = "$Id: lkud.c,v 1.3 1997/10/24 08:02:28 abe Exp abe $";
d66 1
a66 1
lkupbdev(dev, i, r)
d68 1
d80 2
d102 1
a102 1
	    if (*dev < dp->rdev)
d104 1
a104 1
	    else if (*dev > dp->rdev)
d130 1
a130 1
	return(NULL);
d141 1
a141 1
lkupdev(dev, i, r)
d143 1
d155 2
d177 1
a177 1
	    if (*dev < dp->rdev)
d179 1
a179 1
	    else if (*dev > dp->rdev)
d205 1
a205 1
	return(NULL);
@


1.3
log
@Revision 4.18
@
text
@d49 1
a49 1
static char *rcsid = "$Id: lkud.c,v 1.2 97/05/26 14:59:54 abe Exp Locker: abe $";
d100 1
a100 1
			hi = mid - 1;
@


1.2
log
@Revision 4.03
@
text
@d49 1
a49 1
static char *rcsid = "$Id: lkud.c,v 1.1 97/02/24 07:29:37 abe Exp Locker: abe $";
d74 2
a75 2
	ino_t inode;
	int low, hi, mid, ty;
d77 1
d146 2
a147 2
	ino_t inode;
	int low, hi, mid, ty;
d149 1
@


1.1
log
@Initial revision
@
text
@d49 1
a49 1
static char *rcsid = "$Id$";
d66 1
a66 1
lkupbdev(dev, i)
d69 4
d78 1
a78 1
	readdev();
d80 2
a81 2
		inode = (ino_t)Lf->inode;
		ty = Lf->inp_ty;
d86 7
d95 4
a98 4
        while (low <= hi) {
                mid = (low + hi) / 2;
		dp = BSdev[mid];
		if (*dev < dp->rdev)
d100 11
a110 9
		else if (*dev > dp->rdev)
                        low = mid + 1;
                else {
			if (i == 0 || ty != 1 || inode == dp->inode)
				return(dp);
			if (inode < dp->inode)
				hi = mid - 1;
			else
				low = mid + 1;
d112 5
d118 8
d137 1
a137 1
lkupdev(dev, i)
d140 4
d149 1
a149 1
	readdev();
d151 2
a152 2
		inode = (ino_t)Lf->inode;
		ty = Lf->inp_ty;
d157 7
d166 16
a181 14
        while (low <= hi) {
                mid = (low + hi) / 2;
		dp = Sdev[mid];
		if (*dev < dp->rdev)
			hi = mid - 1;
		else if (*dev > dp->rdev)
                        low = mid + 1;
                else {
			if (i == 0 || ty != 1 || inode == dp->inode)
				return(dp);
			if (inode < dp->inode)
				hi = mid - 1;
			else
				low = mid + 1;
d183 5
d189 8
@
